{"title":"剑指源码-spring-(六)-容器刷新的十二大步","slug":"剑指源码-spring-六-容器刷新的十二大步","date":"2022-04-28T13:48:08.000Z","updated":"2024-04-22T07:21:14.907Z","comments":true,"path":"api/articles/剑指源码-spring-六-容器刷新的十二大步.json","excerpt":"容器刷新的12大步，分析主流程refresh()的12大步骤的具体事项","covers":["http://hyqup-blog-upyun.test.upcdn.net/img/%E5%AE%B9%E5%99%A8%E5%88%B7%E6%96%B0%E7%9A%8412%E5%A4%A7%E6%AD%A5.drawio.png"],"content":"<p>容器刷新的12大步，分析主流程refresh()的12大步骤的具体事项</p>\n<span id=\"more\"></span>\n\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">refresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IllegalStateException</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>startupShutdownMonitor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token class-name\">StartupStep</span> contextRefresh <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationStartup<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spring.context.refresh\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Prepare this context for refreshing.</span>\n      <span class=\"token comment\">// 准备上下文环境信息</span>\n      <span class=\"token function\">prepareRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Tell the subclass to refresh the internal bean factory.</span>\n      <span class=\"token comment\">// 获取准备好的空容器</span>\n      <span class=\"token class-name\">ConfigurableListableBeanFactory</span> beanFactory <span class=\"token operator\">=</span> <span class=\"token function\">obtainFreshBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Prepare the bean factory for use in this context.</span>\n      <span class=\"token comment\">// 准备Bean工厂信息</span>\n      <span class=\"token function\">prepareBeanFactory</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token comment\">// Allows post-processing of the bean factory in context subclasses.</span>\n         <span class=\"token comment\">// 后置处理Bean工厂</span>\n         <span class=\"token function\">postProcessBeanFactory</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token class-name\">StartupStep</span> beanPostProcess <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationStartup<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spring.context.beans.post-process\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token comment\">// Invoke factory processors registered as beans in the context.</span>\n         <span class=\"token comment\">// 执行所有的 BeanFactoryPostProcessor，理由BeanFactory后置增强器对工厂进行修改或增强</span>\n         <span class=\"token function\">invokeBeanFactoryPostProcessors</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Register bean processors that intercept bean creation.</span>\n         <span class=\"token comment\">// 注册所有的bean的后置处理器</span>\n         <span class=\"token function\">registerBeanPostProcessors</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         beanPostProcess<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Initialize message source for this context.</span>\n         <span class=\"token comment\">// 初始化国际化信息</span>\n         <span class=\"token function\">initMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Initialize event multicaster for this context.</span>\n         <span class=\"token comment\">//  初始化事件派发功能</span>\n         <span class=\"token function\">initApplicationEventMulticaster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Initialize other special beans in specific context subclasses.</span>\n         <span class=\"token comment\">// 留给子类继续增强</span>\n         <span class=\"token function\">onRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Check for listener beans and register them.</span>\n         <span class=\"token comment\">// 注册监听器</span>\n         <span class=\"token function\">registerListeners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Instantiate all remaining (non-lazy-init) singletons.</span>\n         <span class=\"token comment\">// 完成Bean工厂 的初始化</span>\n         <span class=\"token function\">finishBeanFactoryInitialization</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Last step: publish corresponding event.</span>\n         <span class=\"token comment\">// 最后一些清理、事件派发功能</span>\n         <span class=\"token function\">finishRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BeansException</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isWarnEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            logger<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Exception encountered during context initialization - \"</span> <span class=\"token operator\">+</span>\n                  <span class=\"token string\">\"cancelling refresh attempt: \"</span> <span class=\"token operator\">+</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">&#125;</span>\n\n         <span class=\"token comment\">// Destroy already created singletons to avoid dangling resources.</span>\n         <span class=\"token function\">destroyBeans</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Reset 'active' flag.</span>\n         <span class=\"token function\">cancelRefresh</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Propagate exception to caller.</span>\n         <span class=\"token keyword\">throw</span> ex<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token comment\">// Reset common introspection caches in Spring's core, since we</span>\n         <span class=\"token comment\">// might not ever need metadata for singleton beans anymore...</span>\n         <span class=\"token function\">resetCommonCaches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         contextRefresh<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h2 id=\"第一步：prepareRefresh\"><a href=\"#第一步：prepareRefresh\" class=\"headerlink\" title=\"第一步：prepareRefresh\"></a>第一步：prepareRefresh</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">prepareRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">// Switch to active.</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>startupDate <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>closed<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>active<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isDebugEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isTraceEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         logger<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Refreshing \"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n         logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Refreshing \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getDisplayName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Initialize any placeholder property sources in the context environment.</span>\n   <span class=\"token comment\">// 初始化属性源 （web应用就是在此将servlet 信息加载）</span>\n   <span class=\"token function\">initPropertySources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Validate that all properties marked as required are resolvable:</span>\n   <span class=\"token comment\">// see ConfigurablePropertyResolver#setRequiredProperties</span>\n   <span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">validateRequiredProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Store pre-refresh ApplicationListeners...</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>earlyApplicationListeners <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>earlyApplicationListeners <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedHashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationListeners<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// Reset local application listeners to pre-refresh state.</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationListeners<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationListeners<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>earlyApplicationListeners<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Allow for the collection of early ApplicationEvents,</span>\n   <span class=\"token comment\">// to be published once the multicaster is available...</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>earlyApplicationEvents <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedHashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>准备上下文信息：初始化一些属性值 以及准备一些环境变量信息environment</p>\n<p>PS:web应用就是在此将servlet 信息加载</p>\n<h2 id=\"第二步：obtainFreshBeanFactory\"><a href=\"#第二步：obtainFreshBeanFactory\" class=\"headerlink\" title=\"第二步：obtainFreshBeanFactory\"></a>第二步：obtainFreshBeanFactory</h2><p>获取在this阶段创建好的 factory对象。</p>\n<p>PS:xml的方式会在此时进行xml信息读取</p>\n<h2 id=\"第三步：prepareBeanFactory\"><a href=\"#第三步：prepareBeanFactory\" class=\"headerlink\" title=\"第三步：prepareBeanFactory\"></a>第三步：prepareBeanFactory</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">prepareBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableListableBeanFactory</span> beanFactory<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">// Tell the internal bean factory to use the context's class loader etc.</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setBeanClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>shouldIgnoreSpel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setBeanExpressionResolver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">StandardBeanExpressionResolver</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">addPropertyEditorRegistrar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ResourceEditorRegistrar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Configure the bean factory with context callbacks.</span>\n   <span class=\"token comment\">//准备了一个处理xxxAware的后置处理器</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">addBeanPostProcessor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ApplicationContextAwareProcessor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">ignoreDependencyInterface</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EnvironmentAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">ignoreDependencyInterface</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EmbeddedValueResolverAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">ignoreDependencyInterface</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResourceLoaderAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">ignoreDependencyInterface</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationEventPublisherAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">ignoreDependencyInterface</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageSourceAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">ignoreDependencyInterface</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationContextAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">ignoreDependencyInterface</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationStartupAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// BeanFactory interface not registered as resolvable type in a plain factory.</span>\n   <span class=\"token comment\">// MessageSource registered (and found for autowiring) as a bean.</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerResolvableDependency</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BeanFactory</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerResolvableDependency</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResourceLoader</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerResolvableDependency</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationEventPublisher</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerResolvableDependency</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationContext</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Register early post-processor for detecting inner beans as ApplicationListeners.</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">addBeanPostProcessor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ApplicationListenerDetector</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Detect a LoadTimeWeaver and prepare for weaving, if found.</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">NativeDetector</span><span class=\"token punctuation\">.</span><span class=\"token function\">inNativeImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">LOAD_TIME_WEAVER_BEAN_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">addBeanPostProcessor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LoadTimeWeaverAwareProcessor</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Set a temporary ClassLoader for type matching.</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setTempClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ContextTypeMatchClassLoader</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Register default environment beans.</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsLocalBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ENVIRONMENT_BEAN_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerSingleton</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ENVIRONMENT_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsLocalBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SYSTEM_PROPERTIES_BEAN_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerSingleton</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SYSTEM_PROPERTIES_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSystemProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsLocalBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SYSTEM_ENVIRONMENT_BEAN_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerSingleton</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SYSTEM_ENVIRONMENT_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSystemEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsLocalBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APPLICATION_STARTUP_BEAN_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerSingleton</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APPLICATION_STARTUP_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getApplicationStartup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>准备一些必要的工具</p>\n<p>如：El表达式，会忽略到实现aware接口,会准备ApplicationContextAwareProcessor</p>\n<h2 id=\"第四步：postProcessBeanFactory\"><a href=\"#第四步：postProcessBeanFactory\" class=\"headerlink\" title=\"第四步：postProcessBeanFactory\"></a>第四步：postProcessBeanFactory</h2><p>留给子类增强</p>\n<h2 id=\"第五步：invokeBeanFactoryPostProcessors\"><a href=\"#第五步：invokeBeanFactoryPostProcessors\" class=\"headerlink\" title=\"第五步：invokeBeanFactoryPostProcessors\"></a>第五步：invokeBeanFactoryPostProcessors</h2><p>执行BeanFactory增强，统一调用 PostProcessorRegistrationDelegate  *装饰器模式，统一处理</p>\n<h2 id=\"第六步：registerBeanPostProcessors\"><a href=\"#第六步：registerBeanPostProcessors\" class=\"headerlink\" title=\"第六步：registerBeanPostProcessors\"></a>第六步：registerBeanPostProcessors</h2><p>注册所有的bean的后置处理器</p>\n<h2 id=\"第七步：initMessageSource\"><a href=\"#第七步：initMessageSource\" class=\"headerlink\" title=\"第七步：initMessageSource\"></a>第七步：initMessageSource</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token class-name\">ConfigurableListableBeanFactory</span> beanFactory <span class=\"token operator\">=</span> <span class=\"token function\">getBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsLocalBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MESSAGE_SOURCE_BEAN_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource <span class=\"token operator\">=</span> beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MESSAGE_SOURCE_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MessageSource</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Make MessageSource aware of parent MessageSource.</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parent <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HierarchicalMessageSource</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token class-name\">HierarchicalMessageSource</span> hms <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HierarchicalMessageSource</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource<span class=\"token punctuation\">;</span>\n         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hms<span class=\"token punctuation\">.</span><span class=\"token function\">getParentMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// Only set parent context as parent MessageSource if no parent MessageSource</span>\n            <span class=\"token comment\">// registered already.</span>\n            hms<span class=\"token punctuation\">.</span><span class=\"token function\">setParentMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token function\">getInternalParentMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isTraceEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         logger<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Using MessageSource [\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// Use empty MessageSource to be able to accept getMessage calls.</span>\n      <span class=\"token class-name\">DelegatingMessageSource</span> dms <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DelegatingMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      dms<span class=\"token punctuation\">.</span><span class=\"token function\">setParentMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token function\">getInternalParentMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource <span class=\"token operator\">=</span> dms<span class=\"token punctuation\">;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerSingleton</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MESSAGE_SOURCE_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isTraceEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         logger<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No '\"</span> <span class=\"token operator\">+</span> <span class=\"token constant\">MESSAGE_SOURCE_BEAN_NAME</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"' bean, using [\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>初始化国际化相关资源,这里没有会创建一个默认的国际化资源</p>\n<h2 id=\"第八步：initApplicationEventMulticaster\"><a href=\"#第八步：initApplicationEventMulticaster\" class=\"headerlink\" title=\"第八步：initApplicationEventMulticaster\"></a>第八步：initApplicationEventMulticaster</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initApplicationEventMulticaster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token class-name\">ConfigurableListableBeanFactory</span> beanFactory <span class=\"token operator\">=</span> <span class=\"token function\">getBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsLocalBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APPLICATION_EVENT_MULTICASTER_BEAN_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationEventMulticaster <span class=\"token operator\">=</span>\n            beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APPLICATION_EVENT_MULTICASTER_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ApplicationEventMulticaster</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isTraceEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         logger<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Using ApplicationEventMulticaster [\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationEventMulticaster <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationEventMulticaster <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleApplicationEventMulticaster</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerSingleton</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APPLICATION_EVENT_MULTICASTER_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationEventMulticaster<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isTraceEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         logger<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No '\"</span> <span class=\"token operator\">+</span> <span class=\"token constant\">APPLICATION_EVENT_MULTICASTER_BEAN_NAME</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"' bean, using \"</span> <span class=\"token operator\">+</span>\n               <span class=\"token string\">\"[\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationEventMulticaster<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSimpleName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>初始化事件派发功能</p>\n<h2 id=\"第九步：onRefresh\"><a href=\"#第九步：onRefresh\" class=\"headerlink\" title=\"第九步：onRefresh\"></a>第九步：onRefresh</h2><p>留给子类继续增强</p>\n<h2 id=\"第十步：registerListeners\"><a href=\"#第十步：registerListeners\" class=\"headerlink\" title=\"第十步：registerListeners\"></a>第十步：registerListeners</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">registerListeners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">// Register statically specified listeners first.</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationListener</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> listener <span class=\"token operator\">:</span> <span class=\"token function\">getApplicationListeners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">getApplicationEventMulticaster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addApplicationListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Do not initialize FactoryBeans here: We need to leave all regular beans</span>\n   <span class=\"token comment\">// uninitialized to let post-processors apply to them!</span>\n   <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> listenerBeanNames <span class=\"token operator\">=</span> <span class=\"token function\">getBeanNamesForType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationListener</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> listenerBeanName <span class=\"token operator\">:</span> listenerBeanNames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">getApplicationEventMulticaster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addApplicationListenerBean</span><span class=\"token punctuation\">(</span>listenerBeanName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Publish early application events now that we finally have a multicaster...</span>\n   <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ApplicationEvent</span><span class=\"token punctuation\">></span></span> earlyEventsToProcess <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>earlyApplicationEvents<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>earlyApplicationEvents <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">CollectionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>earlyEventsToProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationEvent</span> earlyEvent <span class=\"token operator\">:</span> earlyEventsToProcess<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token function\">getApplicationEventMulticaster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">multicastEvent</span><span class=\"token punctuation\">(</span>earlyEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>注册监听器</p>\n<h2 id=\"第十一步：finishBeanFactoryInitialization\"><a href=\"#第十一步：finishBeanFactoryInitialization\" class=\"headerlink\" title=\"第十一步：finishBeanFactoryInitialization\"></a>第十一步：finishBeanFactoryInitialization</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">finishBeanFactoryInitialization</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableListableBeanFactory</span> beanFactory<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">// Initialize conversion service for this context.</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CONVERSION_SERVICE_BEAN_NAME</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n         beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">isTypeMatch</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CONVERSION_SERVICE_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ConversionService</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setConversionService</span><span class=\"token punctuation\">(</span>\n            beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CONVERSION_SERVICE_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ConversionService</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Register a default embedded value resolver if no BeanFactoryPostProcessor</span>\n   <span class=\"token comment\">// (such as a PropertySourcesPlaceholderConfigurer bean) registered any before:</span>\n   <span class=\"token comment\">// at this point, primarily for resolution in annotation attribute values.</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">hasEmbeddedValueResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">addEmbeddedValueResolver</span><span class=\"token punctuation\">(</span>strVal <span class=\"token operator\">-></span> <span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolvePlaceholders</span><span class=\"token punctuation\">(</span>strVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early.</span>\n   <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> weaverAwareNames <span class=\"token operator\">=</span> beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanNamesForType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LoadTimeWeaverAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> weaverAwareName <span class=\"token operator\">:</span> weaverAwareNames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span>weaverAwareName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Stop using the temporary ClassLoader for type matching.</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setTempClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Allow for caching all bean definition metadata, not expecting further changes.</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">freezeConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Instantiate all remaining (non-lazy-init) singletons.</span>\n   <span class=\"token comment\">// 初始化所有的单实例bean</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">preInstantiateSingletons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>完成剩下的bean初始化，这里会调用bean的初始化流程，详情参考上一章节，过程中会有不断的BeanPostProcessor对功能增强</p>\n<h2 id=\"第十二步：finishRefresh\"><a href=\"#第十二步：finishRefresh\" class=\"headerlink\" title=\"第十二步：finishRefresh\"></a>第十二步：finishRefresh</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deprecation\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">finishRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">// Clear context-level resource caches (such as ASM metadata from scanning).</span>\n   <span class=\"token function\">clearResourceCaches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Initialize lifecycle processor for this context.</span>\n   <span class=\"token function\">initLifecycleProcessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Propagate refresh to lifecycle processor first.</span>\n   <span class=\"token function\">getLifecycleProcessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Publish the final event.</span>\n   <span class=\"token function\">publishEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ContextRefreshedEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Participate in LiveBeansView MBean, if active.</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">NativeDetector</span><span class=\"token punctuation\">.</span><span class=\"token function\">inNativeImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token class-name\">LiveBeansView</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>一些杂活清理缓存，事件派发等事情</p>\n<h2 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h2><p><img src=\"http://hyqup-blog-upyun.test.upcdn.net/img/%E5%AE%B9%E5%99%A8%E5%88%B7%E6%96%B0%E7%9A%8412%E5%A4%A7%E6%AD%A5.drawio.png\" alt=\"容器刷新的12大步.drawio\"></p>\n","more":"<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">refresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IllegalStateException</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>startupShutdownMonitor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token class-name\">StartupStep</span> contextRefresh <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationStartup<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spring.context.refresh\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Prepare this context for refreshing.</span>\n      <span class=\"token comment\">// 准备上下文环境信息</span>\n      <span class=\"token function\">prepareRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Tell the subclass to refresh the internal bean factory.</span>\n      <span class=\"token comment\">// 获取准备好的空容器</span>\n      <span class=\"token class-name\">ConfigurableListableBeanFactory</span> beanFactory <span class=\"token operator\">=</span> <span class=\"token function\">obtainFreshBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token comment\">// Prepare the bean factory for use in this context.</span>\n      <span class=\"token comment\">// 准备Bean工厂信息</span>\n      <span class=\"token function\">prepareBeanFactory</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token comment\">// Allows post-processing of the bean factory in context subclasses.</span>\n         <span class=\"token comment\">// 后置处理Bean工厂</span>\n         <span class=\"token function\">postProcessBeanFactory</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token class-name\">StartupStep</span> beanPostProcess <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationStartup<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"spring.context.beans.post-process\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token comment\">// Invoke factory processors registered as beans in the context.</span>\n         <span class=\"token comment\">// 执行所有的 BeanFactoryPostProcessor，理由BeanFactory后置增强器对工厂进行修改或增强</span>\n         <span class=\"token function\">invokeBeanFactoryPostProcessors</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Register bean processors that intercept bean creation.</span>\n         <span class=\"token comment\">// 注册所有的bean的后置处理器</span>\n         <span class=\"token function\">registerBeanPostProcessors</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         beanPostProcess<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Initialize message source for this context.</span>\n         <span class=\"token comment\">// 初始化国际化信息</span>\n         <span class=\"token function\">initMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Initialize event multicaster for this context.</span>\n         <span class=\"token comment\">//  初始化事件派发功能</span>\n         <span class=\"token function\">initApplicationEventMulticaster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Initialize other special beans in specific context subclasses.</span>\n         <span class=\"token comment\">// 留给子类继续增强</span>\n         <span class=\"token function\">onRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Check for listener beans and register them.</span>\n         <span class=\"token comment\">// 注册监听器</span>\n         <span class=\"token function\">registerListeners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Instantiate all remaining (non-lazy-init) singletons.</span>\n         <span class=\"token comment\">// 完成Bean工厂 的初始化</span>\n         <span class=\"token function\">finishBeanFactoryInitialization</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Last step: publish corresponding event.</span>\n         <span class=\"token comment\">// 最后一些清理、事件派发功能</span>\n         <span class=\"token function\">finishRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BeansException</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isWarnEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            logger<span class=\"token punctuation\">.</span><span class=\"token function\">warn</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Exception encountered during context initialization - \"</span> <span class=\"token operator\">+</span>\n                  <span class=\"token string\">\"cancelling refresh attempt: \"</span> <span class=\"token operator\">+</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">&#125;</span>\n\n         <span class=\"token comment\">// Destroy already created singletons to avoid dangling resources.</span>\n         <span class=\"token function\">destroyBeans</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Reset 'active' flag.</span>\n         <span class=\"token function\">cancelRefresh</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n         <span class=\"token comment\">// Propagate exception to caller.</span>\n         <span class=\"token keyword\">throw</span> ex<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n\n      <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token comment\">// Reset common introspection caches in Spring's core, since we</span>\n         <span class=\"token comment\">// might not ever need metadata for singleton beans anymore...</span>\n         <span class=\"token function\">resetCommonCaches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         contextRefresh<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"第一步：prepareRefresh\"><a href=\"#第一步：prepareRefresh\" class=\"headerlink\" title=\"第一步：prepareRefresh\"></a>第一步：prepareRefresh</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">prepareRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">// Switch to active.</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>startupDate <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentTimeMillis</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>closed<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>active<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isDebugEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isTraceEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         logger<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Refreshing \"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n         logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Refreshing \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getDisplayName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Initialize any placeholder property sources in the context environment.</span>\n   <span class=\"token comment\">// 初始化属性源 （web应用就是在此将servlet 信息加载）</span>\n   <span class=\"token function\">initPropertySources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Validate that all properties marked as required are resolvable:</span>\n   <span class=\"token comment\">// see ConfigurablePropertyResolver#setRequiredProperties</span>\n   <span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">validateRequiredProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Store pre-refresh ApplicationListeners...</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>earlyApplicationListeners <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>earlyApplicationListeners <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedHashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationListeners<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// Reset local application listeners to pre-refresh state.</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationListeners<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationListeners<span class=\"token punctuation\">.</span><span class=\"token function\">addAll</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>earlyApplicationListeners<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Allow for the collection of early ApplicationEvents,</span>\n   <span class=\"token comment\">// to be published once the multicaster is available...</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>earlyApplicationEvents <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinkedHashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>准备上下文信息：初始化一些属性值 以及准备一些环境变量信息environment</p>\n<p>PS:web应用就是在此将servlet 信息加载</p>\n<h2 id=\"第二步：obtainFreshBeanFactory\"><a href=\"#第二步：obtainFreshBeanFactory\" class=\"headerlink\" title=\"第二步：obtainFreshBeanFactory\"></a>第二步：obtainFreshBeanFactory</h2><p>获取在this阶段创建好的 factory对象。</p>\n<p>PS:xml的方式会在此时进行xml信息读取</p>\n<h2 id=\"第三步：prepareBeanFactory\"><a href=\"#第三步：prepareBeanFactory\" class=\"headerlink\" title=\"第三步：prepareBeanFactory\"></a>第三步：prepareBeanFactory</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">prepareBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableListableBeanFactory</span> beanFactory<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">// Tell the internal bean factory to use the context's class loader etc.</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setBeanClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token function\">getClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>shouldIgnoreSpel<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setBeanExpressionResolver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">StandardBeanExpressionResolver</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">addPropertyEditorRegistrar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ResourceEditorRegistrar</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Configure the bean factory with context callbacks.</span>\n   <span class=\"token comment\">//准备了一个处理xxxAware的后置处理器</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">addBeanPostProcessor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ApplicationContextAwareProcessor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">ignoreDependencyInterface</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EnvironmentAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">ignoreDependencyInterface</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">EmbeddedValueResolverAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">ignoreDependencyInterface</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResourceLoaderAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">ignoreDependencyInterface</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationEventPublisherAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">ignoreDependencyInterface</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MessageSourceAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">ignoreDependencyInterface</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationContextAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">ignoreDependencyInterface</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationStartupAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// BeanFactory interface not registered as resolvable type in a plain factory.</span>\n   <span class=\"token comment\">// MessageSource registered (and found for autowiring) as a bean.</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerResolvableDependency</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">BeanFactory</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerResolvableDependency</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ResourceLoader</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerResolvableDependency</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationEventPublisher</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerResolvableDependency</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationContext</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Register early post-processor for detecting inner beans as ApplicationListeners.</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">addBeanPostProcessor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ApplicationListenerDetector</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Detect a LoadTimeWeaver and prepare for weaving, if found.</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">NativeDetector</span><span class=\"token punctuation\">.</span><span class=\"token function\">inNativeImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">LOAD_TIME_WEAVER_BEAN_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">addBeanPostProcessor</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">LoadTimeWeaverAwareProcessor</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Set a temporary ClassLoader for type matching.</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setTempClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ContextTypeMatchClassLoader</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Register default environment beans.</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsLocalBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ENVIRONMENT_BEAN_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerSingleton</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ENVIRONMENT_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsLocalBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SYSTEM_PROPERTIES_BEAN_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerSingleton</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SYSTEM_PROPERTIES_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSystemProperties</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsLocalBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SYSTEM_ENVIRONMENT_BEAN_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerSingleton</span><span class=\"token punctuation\">(</span><span class=\"token constant\">SYSTEM_ENVIRONMENT_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSystemEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsLocalBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APPLICATION_STARTUP_BEAN_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerSingleton</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APPLICATION_STARTUP_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token function\">getApplicationStartup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>准备一些必要的工具</p>\n<p>如：El表达式，会忽略到实现aware接口,会准备ApplicationContextAwareProcessor</p>\n<h2 id=\"第四步：postProcessBeanFactory\"><a href=\"#第四步：postProcessBeanFactory\" class=\"headerlink\" title=\"第四步：postProcessBeanFactory\"></a>第四步：postProcessBeanFactory</h2><p>留给子类增强</p>\n<h2 id=\"第五步：invokeBeanFactoryPostProcessors\"><a href=\"#第五步：invokeBeanFactoryPostProcessors\" class=\"headerlink\" title=\"第五步：invokeBeanFactoryPostProcessors\"></a>第五步：invokeBeanFactoryPostProcessors</h2><p>执行BeanFactory增强，统一调用 PostProcessorRegistrationDelegate  *装饰器模式，统一处理</p>\n<h2 id=\"第六步：registerBeanPostProcessors\"><a href=\"#第六步：registerBeanPostProcessors\" class=\"headerlink\" title=\"第六步：registerBeanPostProcessors\"></a>第六步：registerBeanPostProcessors</h2><p>注册所有的bean的后置处理器</p>\n<h2 id=\"第七步：initMessageSource\"><a href=\"#第七步：initMessageSource\" class=\"headerlink\" title=\"第七步：initMessageSource\"></a>第七步：initMessageSource</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token class-name\">ConfigurableListableBeanFactory</span> beanFactory <span class=\"token operator\">=</span> <span class=\"token function\">getBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsLocalBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MESSAGE_SOURCE_BEAN_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource <span class=\"token operator\">=</span> beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MESSAGE_SOURCE_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">MessageSource</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// Make MessageSource aware of parent MessageSource.</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>parent <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">HierarchicalMessageSource</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token class-name\">HierarchicalMessageSource</span> hms <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">HierarchicalMessageSource</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource<span class=\"token punctuation\">;</span>\n         <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hms<span class=\"token punctuation\">.</span><span class=\"token function\">getParentMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// Only set parent context as parent MessageSource if no parent MessageSource</span>\n            <span class=\"token comment\">// registered already.</span>\n            hms<span class=\"token punctuation\">.</span><span class=\"token function\">setParentMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token function\">getInternalParentMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isTraceEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         logger<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Using MessageSource [\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// Use empty MessageSource to be able to accept getMessage calls.</span>\n      <span class=\"token class-name\">DelegatingMessageSource</span> dms <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DelegatingMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      dms<span class=\"token punctuation\">.</span><span class=\"token function\">setParentMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token function\">getInternalParentMessageSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource <span class=\"token operator\">=</span> dms<span class=\"token punctuation\">;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerSingleton</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MESSAGE_SOURCE_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isTraceEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         logger<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No '\"</span> <span class=\"token operator\">+</span> <span class=\"token constant\">MESSAGE_SOURCE_BEAN_NAME</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"' bean, using [\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>messageSource <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>初始化国际化相关资源,这里没有会创建一个默认的国际化资源</p>\n<h2 id=\"第八步：initApplicationEventMulticaster\"><a href=\"#第八步：initApplicationEventMulticaster\" class=\"headerlink\" title=\"第八步：initApplicationEventMulticaster\"></a>第八步：initApplicationEventMulticaster</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initApplicationEventMulticaster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token class-name\">ConfigurableListableBeanFactory</span> beanFactory <span class=\"token operator\">=</span> <span class=\"token function\">getBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsLocalBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APPLICATION_EVENT_MULTICASTER_BEAN_NAME</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationEventMulticaster <span class=\"token operator\">=</span>\n            beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APPLICATION_EVENT_MULTICASTER_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ApplicationEventMulticaster</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isTraceEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         logger<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Using ApplicationEventMulticaster [\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationEventMulticaster <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationEventMulticaster <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleApplicationEventMulticaster</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">registerSingleton</span><span class=\"token punctuation\">(</span><span class=\"token constant\">APPLICATION_EVENT_MULTICASTER_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationEventMulticaster<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isTraceEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         logger<span class=\"token punctuation\">.</span><span class=\"token function\">trace</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No '\"</span> <span class=\"token operator\">+</span> <span class=\"token constant\">APPLICATION_EVENT_MULTICASTER_BEAN_NAME</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"' bean, using \"</span> <span class=\"token operator\">+</span>\n               <span class=\"token string\">\"[\"</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationEventMulticaster<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSimpleName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>初始化事件派发功能</p>\n<h2 id=\"第九步：onRefresh\"><a href=\"#第九步：onRefresh\" class=\"headerlink\" title=\"第九步：onRefresh\"></a>第九步：onRefresh</h2><p>留给子类继续增强</p>\n<h2 id=\"第十步：registerListeners\"><a href=\"#第十步：registerListeners\" class=\"headerlink\" title=\"第十步：registerListeners\"></a>第十步：registerListeners</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">registerListeners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">// Register statically specified listeners first.</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationListener</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> listener <span class=\"token operator\">:</span> <span class=\"token function\">getApplicationListeners</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">getApplicationEventMulticaster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addApplicationListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Do not initialize FactoryBeans here: We need to leave all regular beans</span>\n   <span class=\"token comment\">// uninitialized to let post-processors apply to them!</span>\n   <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> listenerBeanNames <span class=\"token operator\">=</span> <span class=\"token function\">getBeanNamesForType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationListener</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> listenerBeanName <span class=\"token operator\">:</span> listenerBeanNames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">getApplicationEventMulticaster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addApplicationListenerBean</span><span class=\"token punctuation\">(</span>listenerBeanName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Publish early application events now that we finally have a multicaster...</span>\n   <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ApplicationEvent</span><span class=\"token punctuation\">></span></span> earlyEventsToProcess <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>earlyApplicationEvents<span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>earlyApplicationEvents <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">CollectionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>earlyEventsToProcess<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ApplicationEvent</span> earlyEvent <span class=\"token operator\">:</span> earlyEventsToProcess<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token function\">getApplicationEventMulticaster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">multicastEvent</span><span class=\"token punctuation\">(</span>earlyEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>注册监听器</p>\n<h2 id=\"第十一步：finishBeanFactoryInitialization\"><a href=\"#第十一步：finishBeanFactoryInitialization\" class=\"headerlink\" title=\"第十一步：finishBeanFactoryInitialization\"></a>第十一步：finishBeanFactoryInitialization</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">finishBeanFactoryInitialization</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ConfigurableListableBeanFactory</span> beanFactory<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">// Initialize conversion service for this context.</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">containsBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CONVERSION_SERVICE_BEAN_NAME</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n         beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">isTypeMatch</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CONVERSION_SERVICE_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ConversionService</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setConversionService</span><span class=\"token punctuation\">(</span>\n            beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CONVERSION_SERVICE_BEAN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">ConversionService</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Register a default embedded value resolver if no BeanFactoryPostProcessor</span>\n   <span class=\"token comment\">// (such as a PropertySourcesPlaceholderConfigurer bean) registered any before:</span>\n   <span class=\"token comment\">// at this point, primarily for resolution in annotation attribute values.</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">hasEmbeddedValueResolver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">addEmbeddedValueResolver</span><span class=\"token punctuation\">(</span>strVal <span class=\"token operator\">-></span> <span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">resolvePlaceholders</span><span class=\"token punctuation\">(</span>strVal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Initialize LoadTimeWeaverAware beans early to allow for registering their transformers early.</span>\n   <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> weaverAwareNames <span class=\"token operator\">=</span> beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanNamesForType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">LoadTimeWeaverAware</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> weaverAwareName <span class=\"token operator\">:</span> weaverAwareNames<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span>weaverAwareName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n\n   <span class=\"token comment\">// Stop using the temporary ClassLoader for type matching.</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setTempClassLoader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Allow for caching all bean definition metadata, not expecting further changes.</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">freezeConfiguration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Instantiate all remaining (non-lazy-init) singletons.</span>\n   <span class=\"token comment\">// 初始化所有的单实例bean</span>\n   beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">preInstantiateSingletons</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>完成剩下的bean初始化，这里会调用bean的初始化流程，详情参考上一章节，过程中会有不断的BeanPostProcessor对功能增强</p>\n<h2 id=\"第十二步：finishRefresh\"><a href=\"#第十二步：finishRefresh\" class=\"headerlink\" title=\"第十二步：finishRefresh\"></a>第十二步：finishRefresh</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"deprecation\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">finishRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">// Clear context-level resource caches (such as ASM metadata from scanning).</span>\n   <span class=\"token function\">clearResourceCaches</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Initialize lifecycle processor for this context.</span>\n   <span class=\"token function\">initLifecycleProcessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Propagate refresh to lifecycle processor first.</span>\n   <span class=\"token function\">getLifecycleProcessor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">onRefresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Publish the final event.</span>\n   <span class=\"token function\">publishEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ContextRefreshedEvent</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Participate in LiveBeansView MBean, if active.</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">NativeDetector</span><span class=\"token punctuation\">.</span><span class=\"token function\">inNativeImage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token class-name\">LiveBeansView</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>一些杂活清理缓存，事件派发等事情</p>\n<h2 id=\"流程图\"><a href=\"#流程图\" class=\"headerlink\" title=\"流程图\"></a>流程图</h2><p><img src=\"http://hyqup-blog-upyun.test.upcdn.net/img/%E5%AE%B9%E5%99%A8%E5%88%B7%E6%96%B0%E7%9A%8412%E5%A4%A7%E6%AD%A5.drawio.png\" alt=\"容器刷新的12大步.drawio\"></p>","categories":[{"name":"Java","path":"api/categories/Java.json"},{"name":"Spring源码","path":"api/categories/Spring源码.json"}],"tags":[{"name":"Bean生命周期","path":"api/tags/Bean生命周期.json"}]}