{"title":"debezium+kafka实现oracle的数据同步方案","slug":"debezium-kafka实现oracle的数据同步方案","date":"2024-03-14T10:09:15.000Z","updated":"2024-04-22T07:21:14.891Z","comments":true,"path":"api/articles/debezium-kafka实现oracle的数据同步方案.json","excerpt":"debezium+kafka实现oracle的数据同步方案，类似与canal，但功能更为强大，支持的数据库类型更多","covers":null,"content":"<p>debezium+kafka实现oracle的数据同步方案，类似与canal，但功能更为强大，支持的数据库类型更多</p>\n<span id=\"more\"></span>\n\n<p>debezium最新稳定版本为2.5，当前文档采用的使用2.4版本</p>\n<h2 id=\"整体流程\"><a href=\"#整体流程\" class=\"headerlink\" title=\"整体流程\"></a>整体流程</h2><blockquote>\n<p>说明： 方式一都是采用kafaka中配置 debezium-connector-oracle 插件然后启动插件方式,然后oracle连接器的，放在kafka的config目录中（connect-distributed.properties），这样启动好kafka 直接就配置好oracle连接器</p>\n<p>方式二：采用的zookeeper+kafaka+connector 安装三个中间件，然后以restful方式请求创建oracle连接器</p>\n<p>优缺点：方式一启动好久配置好参数，方式二以HTTP+JSON参数配置连接器，更为灵活</p>\n</blockquote>\n<p>方式一：</p>\n<ul>\n<li>oracle 开启日志记录<br>查询是否开启 select name,log_mode from v$database;<br>开启 ALTER DATABASE ARCHIVELOG;<br>补全日志 ALTER DATABASE ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS</li>\n<li>下载debezium-connector-oracle-2.5.2.Final-plugin 插件 </li>\n<li>配置kafka 中debezium插件地址</li>\n<li>配置kafka中 <strong>connect-distributed.properties</strong>配置参数  包括oracle连接信息等<br>配置参数参考：<a href=\"https://www.cnblogs.com/Marydon20170307/p/17944940\">https://www.cnblogs.com/Marydon20170307/p/17944940</a></li>\n<li>先后启动zookeeper kafka</li>\n<li>我们的java springboot应用监听kafka消息，做数据入库</li>\n</ul>\n<p>方式二：</p>\n<ul>\n<li><p>oracle 开启日志记录<br>查询是否开启 select name,log_mode from v$database;<br>开启 ALTER DATABASE ARCHIVELOG;<br>补全日志 ALTER DATABASE ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS</p>\n</li>\n<li><p>先后启动<strong>zookeeper</strong>、<strong>kafka</strong>、<strong>kafka connect</strong>中间件</p>\n</li>\n<li><p>最后以HTTP形式完成配置</p>\n<p>配置参数参考：<a href=\"https://www.cnblogs.com/Marydon20170307/p/17944940\">https://www.cnblogs.com/Marydon20170307/p/17944940</a></p>\n</li>\n<li><p>我们的java springboot应用监听kafka消息，做数据入库</p>\n</li>\n</ul>\n<h2 id=\"安装组件（下面方式二选一）\"><a href=\"#安装组件（下面方式二选一）\" class=\"headerlink\" title=\"安装组件（下面方式二选一）\"></a>安装组件（下面方式二选一）</h2><h3 id=\"采用docker安装（当前测试环境的安装方式）\"><a href=\"#采用docker安装（当前测试环境的安装方式）\" class=\"headerlink\" title=\"采用docker安装（当前测试环境的安装方式）\"></a>采用docker安装（当前测试环境的安装方式）</h3><p><strong>zookeeper</strong>中间件</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span>  <span class=\"token parameter variable\">--name</span> zookeeper <span class=\"token parameter variable\">-p</span> <span class=\"token number\">2181</span>:2181 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">9011</span>:9011 debezium/zookeeper:2.4 <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\n\n<p><strong>kafka</strong>中间件</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--name</span> kafka <span class=\"token parameter variable\">-p</span> <span class=\"token number\">9092</span>:9092 <span class=\"token parameter variable\">--link</span> zookeeper:zookeeper debezium/kafka:2.4<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\n\n<p> <strong>Kafka Connect</strong>中间件</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--name</span> connect <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8083</span>:8083  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">GROUP_ID</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">CONFIG_STORAGE_TOPIC</span><span class=\"token operator\">=</span>my_connect_configs <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">OFFSET_STORAGE_TOPIC</span><span class=\"token operator\">=</span>my_connect_offsets <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">STATUS_STORAGE_TOPIC</span><span class=\"token operator\">=</span>my_connect_statuses  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">CONNECT_MAX_REQUEST_SIZE</span><span class=\"token operator\">=</span><span class=\"token number\">20000000</span>  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">CONNECT_BUFFER_MEMORY</span><span class=\"token operator\">=</span><span class=\"token number\">800000000</span>    <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">CONNECT_FETCH_MAX_BYTES</span><span class=\"token operator\">=</span><span class=\"token number\">20000000</span>  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">CONNECT_MAX_PARTITION_FETCH_BYTES</span><span class=\"token operator\">=</span><span class=\"token number\">20000000</span> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">OFFSET_FLUSH_INTERVAL_MS</span><span class=\"token operator\">=</span><span class=\"token number\">10000</span>  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">OFFSET_FLUSH_TIMEOUT_MS</span><span class=\"token operator\">=</span><span class=\"token number\">6000000</span> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">CONNECT_CONNECTIONS_MAX_IDLE_MS</span><span class=\"token operator\">=</span><span class=\"token number\">6000000</span> <span class=\"token parameter variable\">-e</span>  <span class=\"token assign-left variable\">CONNECT_RECEIVE.BUFFER.BYTES</span><span class=\"token operator\">=</span><span class=\"token number\">500000000</span> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">CONNECT_PRODUCER_MAX_REQUEST_SIZE</span><span class=\"token operator\">=</span><span class=\"token number\">20000000</span>  <span class=\"token parameter variable\">--link</span> zookeeper:zookeeper <span class=\"token parameter variable\">--link</span> kafka:kafka debezium/connect:2.4<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre></div></figure>\n\n<p>oracle驱动拷贝到connect的目录下</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token function\">cp</span> ojdbc8.jar 容器ID:/kafka/libs \n<span class=\"token comment\"># 重启connect </span>\n<span class=\"token function\">docker</span> restart connect容器ID<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h3 id=\"采用docker-compose安装\"><a href=\"#采用docker-compose安装\" class=\"headerlink\" title=\"采用docker-compose安装\"></a>采用docker-compose安装</h3><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">version: <span class=\"token string\">'3.7'</span>\n\nservices:\n  zookeeper:\n    image: debezium/zookeeper:2.4\n    container_name: zookeeper\n    ports:\n      - <span class=\"token string\">\"2181:2181\"</span>\n      - <span class=\"token string\">\"9011:9011\"</span>\n\n  kafka:\n    image: debezium/kafka:2.4\n    container_name: kafka\n    ports:\n      - <span class=\"token string\">\"9092:9092\"</span>\n    environment:\n      ZOOKEEPER_CONNECT: zookeeper:2181\n\n  connect:\n    image: debezium/connect:2.4\n    container_name: connect\n    ports:\n      - <span class=\"token string\">\"8083:8083\"</span>\n    environment:\n      GROUP_ID: <span class=\"token number\">1</span>\n      CONFIG_STORAGE_TOPIC: my_connect_configs\n      OFFSET_STORAGE_TOPIC: my_connect_offsets\n      STATUS_STORAGE_TOPIC: my_connect_statuses\n      CONNECT_MAX_REQUEST_SIZE: <span class=\"token number\">20000000</span>\n      CONNECT_BUFFER_MEMORY: <span class=\"token number\">800000000</span>\n      CONNECT_FETCH_MAX_BYTES: <span class=\"token number\">20000000</span>\n      CONNECT_MAX_PARTITION_FETCH_BYTES: <span class=\"token number\">20000000</span>\n      OFFSET_FLUSH_INTERVAL_MS: <span class=\"token number\">10000</span>\n      OFFSET_FLUSH_TIMEOUT_MS: <span class=\"token number\">6000000</span>\n      CONNECT_CONNECTIONS_MAX_IDLE_MS: <span class=\"token number\">6000000</span>\n      CONNECT_RECEIVE_BUFFER_BYTES: <span class=\"token number\">500000000</span>\n      CONNECT_PRODUCER_MAX_REQUEST_SIZE: <span class=\"token number\">20000000</span>\n    links:\n      - <span class=\"token string\">\"zookeeper:zookeeper\"</span>\n      - <span class=\"token string\">\"kafka:kafka\"</span>\n    volumes:\n      - ./connect/ojdbc8.jar:/kafka/libs/ojdbc8.jar<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h2 id=\"Oracle连接器配置\"><a href=\"#Oracle连接器配置\" class=\"headerlink\" title=\"Oracle连接器配置\"></a>Oracle连接器配置</h2><blockquote>\n<p>我们这里采用以HTTP形式配置连接器，主要操作的就是对kafka-connect这个中间件操作</p>\n</blockquote>\n<p>首先拿到connect连接器能够使用的暴露出来的ip+端口。公网也好内网也行，内网127.0.0.1为例</p>\n<p>可以使用api工具 如apifox、postman</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#查看所有的connector进程</span>\nGET http://127.0.0.1:8083/connectors\n\n<span class=\"token comment\">#新建connector连接器配置(需要携带配置器json参数)</span>\nPOST http://127.0.0.1:8083/connectors\n\n<span class=\"token comment\">#删除connector连接器,&#123;name&#125;是新建时候name名字</span>\nDELETE http://127.0.0.1:8083/connectors/<span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">#查看connector连接器状态,&#123;name&#125;是新建时候name名字</span>\nGET http://127.0.0.1:8083/connectors/<span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">&#125;</span>/status\n\n<span class=\"token comment\">#目前没有从官网找到更新的接口，目前都是先删除再新增的方式实现修改连接器配置</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h4 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h4><blockquote>\n<p>官方文档地址：<a href=\"https://debezium.io/documentation/reference/2.4/connectors/oracle.html\">https://debezium.io/documentation/reference/2.4/connectors/oracle.html</a></p>\n</blockquote>\n<p>结构如下：</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"debezium-oracle\"</span><span class=\"token punctuation\">,</span>  \n    <span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"connector.class\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"io.debezium.connector.oracle.OracleConnector\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"tasks.max\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n         <span class=\"token property\">\"topic.prefix\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span> \n        \t   <span class=\"token property\">\"database.url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(LOAD_BALANCE=OFF)(FAILOVER=ON)(ADDRESS=(PROTOCOL=TCP)(HOST=&lt;oracle ip 1>)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=&lt;oracle ip 2>)(PORT=1521)))(CONNECT_DATA=SERVICE_NAME=)(SERVER=DEDICATED)))\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"database.user\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"inventory\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"database.password\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"database.dbname\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"xe\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"schema.history.internal.kafka.bootstrap.servers\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"10.168.1.163:9092\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"schema.history.internal.kafka.topic\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"schema-changes.inventory\"</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>列举一些核心比较重要的参数</p>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>name属性</td>\n<td>连接器名称，随意但必须唯一</td>\n</tr>\n<tr>\n<td>database.xxx</td>\n<td>数据库连接参数，见名知意，不多解释</td>\n</tr>\n<tr>\n<td>topic.prefix</td>\n<td>kafaka的topic前缀，重要，后续采集的数据推送到kafaka的时候，topic的命名就是**<u>prefix前缀+库名+表名</u>**，非常重要，java程序中监听此topic做后续业务</td>\n</tr>\n<tr>\n<td>table.include.list</td>\n<td>要捕获的变更记录的表，多个逗号分割 格式是<strong>库名.表名</strong></td>\n</tr>\n<tr>\n<td>log.mining.strategy</td>\n<td>redo_log_catalog(默认) 归档日志，<br />redolog写满才会生成归档日志，导致topic接收数据慢（DDL+DML<br />online_catalog 在线日志，即时读取日志（不包含DDL，只包含DML）</td>\n</tr>\n<tr>\n<td>skipped.operations</td>\n<td>默认值：t。不需要监控的操作，可选值：c(insert&#x2F;create）,u（update）,d （delete）,t (truncate）,none。</td>\n</tr>\n<tr>\n<td>snapshot.mode</td>\n<td>认值: initial, 可选值: [initial,initial_onlywhen_needed,never,schema_onlyschema_only_recovery] <br />initial(默认）（初始全量，后续增量）：连接器执行数据库的初始一致性快照，快照完成后，连接器开始为后续数据库更改流式传输事件记录。<br />initia_only（只全量，不增量）：连接器只执行数据库的初始一致性快照，不允许捕获任何后续更改的事件。<br />schema_only（只增量，不全量）：连接器只捕获所有相关表的表结构，不捕获初始数据，但是会同步后续数据库的更改记录。</td>\n</tr>\n<tr>\n<td>decimal.handlling.mode</td>\n<td>默认值: precise，可选值: [precise,double,string]  <br />说明：<br />如果你使用的不是debezium-connector-jdbc插件来接收数据，需将值设为：string，只有这样才能解决number类型被转成base64码的问题。<br />示例 <br />当decimal.handling.mode属性值为precise时：”ZS_ID”:(“scale”:0,”value”:”Aw&#x3D;&#x3D;};<br />当decimal.handling.mode属性值为string时：”ZS_ID”:”3”。</td>\n</tr>\n</tbody></table>\n","more":"<p>debezium最新稳定版本为2.5，当前文档采用的使用2.4版本</p>\n<h2 id=\"整体流程\"><a href=\"#整体流程\" class=\"headerlink\" title=\"整体流程\"></a>整体流程</h2><blockquote>\n<p>说明： 方式一都是采用kafaka中配置 debezium-connector-oracle 插件然后启动插件方式,然后oracle连接器的，放在kafka的config目录中（connect-distributed.properties），这样启动好kafka 直接就配置好oracle连接器</p>\n<p>方式二：采用的zookeeper+kafaka+connector 安装三个中间件，然后以restful方式请求创建oracle连接器</p>\n<p>优缺点：方式一启动好久配置好参数，方式二以HTTP+JSON参数配置连接器，更为灵活</p>\n</blockquote>\n<p>方式一：</p>\n<ul>\n<li>oracle 开启日志记录<br>查询是否开启 select name,log_mode from v$database;<br>开启 ALTER DATABASE ARCHIVELOG;<br>补全日志 ALTER DATABASE ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS</li>\n<li>下载debezium-connector-oracle-2.5.2.Final-plugin 插件 </li>\n<li>配置kafka 中debezium插件地址</li>\n<li>配置kafka中 <strong>connect-distributed.properties</strong>配置参数  包括oracle连接信息等<br>配置参数参考：<a href=\"https://www.cnblogs.com/Marydon20170307/p/17944940\">https://www.cnblogs.com/Marydon20170307/p/17944940</a></li>\n<li>先后启动zookeeper kafka</li>\n<li>我们的java springboot应用监听kafka消息，做数据入库</li>\n</ul>\n<p>方式二：</p>\n<ul>\n<li><p>oracle 开启日志记录<br>查询是否开启 select name,log_mode from v$database;<br>开启 ALTER DATABASE ARCHIVELOG;<br>补全日志 ALTER DATABASE ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS</p>\n</li>\n<li><p>先后启动<strong>zookeeper</strong>、<strong>kafka</strong>、<strong>kafka connect</strong>中间件</p>\n</li>\n<li><p>最后以HTTP形式完成配置</p>\n<p>配置参数参考：<a href=\"https://www.cnblogs.com/Marydon20170307/p/17944940\">https://www.cnblogs.com/Marydon20170307/p/17944940</a></p>\n</li>\n<li><p>我们的java springboot应用监听kafka消息，做数据入库</p>\n</li>\n</ul>\n<h2 id=\"安装组件（下面方式二选一）\"><a href=\"#安装组件（下面方式二选一）\" class=\"headerlink\" title=\"安装组件（下面方式二选一）\"></a>安装组件（下面方式二选一）</h2><h3 id=\"采用docker安装（当前测试环境的安装方式）\"><a href=\"#采用docker安装（当前测试环境的安装方式）\" class=\"headerlink\" title=\"采用docker安装（当前测试环境的安装方式）\"></a>采用docker安装（当前测试环境的安装方式）</h3><p><strong>zookeeper</strong>中间件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span>  <span class=\"token parameter variable\">--name</span> zookeeper <span class=\"token parameter variable\">-p</span> <span class=\"token number\">2181</span>:2181 <span class=\"token parameter variable\">-p</span> <span class=\"token number\">9011</span>:9011 debezium/zookeeper:2.4 <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p><strong>kafka</strong>中间件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--name</span> kafka <span class=\"token parameter variable\">-p</span> <span class=\"token number\">9092</span>:9092 <span class=\"token parameter variable\">--link</span> zookeeper:zookeeper debezium/kafka:2.4<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p> <strong>Kafka Connect</strong>中间件</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--name</span> connect <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8083</span>:8083  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">GROUP_ID</span><span class=\"token operator\">=</span><span class=\"token number\">1</span> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">CONFIG_STORAGE_TOPIC</span><span class=\"token operator\">=</span>my_connect_configs <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">OFFSET_STORAGE_TOPIC</span><span class=\"token operator\">=</span>my_connect_offsets <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">STATUS_STORAGE_TOPIC</span><span class=\"token operator\">=</span>my_connect_statuses  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">CONNECT_MAX_REQUEST_SIZE</span><span class=\"token operator\">=</span><span class=\"token number\">20000000</span>  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">CONNECT_BUFFER_MEMORY</span><span class=\"token operator\">=</span><span class=\"token number\">800000000</span>    <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">CONNECT_FETCH_MAX_BYTES</span><span class=\"token operator\">=</span><span class=\"token number\">20000000</span>  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">CONNECT_MAX_PARTITION_FETCH_BYTES</span><span class=\"token operator\">=</span><span class=\"token number\">20000000</span> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">OFFSET_FLUSH_INTERVAL_MS</span><span class=\"token operator\">=</span><span class=\"token number\">10000</span>  <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">OFFSET_FLUSH_TIMEOUT_MS</span><span class=\"token operator\">=</span><span class=\"token number\">6000000</span> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">CONNECT_CONNECTIONS_MAX_IDLE_MS</span><span class=\"token operator\">=</span><span class=\"token number\">6000000</span> <span class=\"token parameter variable\">-e</span>  <span class=\"token assign-left variable\">CONNECT_RECEIVE.BUFFER.BYTES</span><span class=\"token operator\">=</span><span class=\"token number\">500000000</span> <span class=\"token parameter variable\">-e</span> <span class=\"token assign-left variable\">CONNECT_PRODUCER_MAX_REQUEST_SIZE</span><span class=\"token operator\">=</span><span class=\"token number\">20000000</span>  <span class=\"token parameter variable\">--link</span> zookeeper:zookeeper <span class=\"token parameter variable\">--link</span> kafka:kafka debezium/connect:2.4<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>oracle驱动拷贝到connect的目录下</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token function\">docker</span> <span class=\"token function\">cp</span> ojdbc8.jar 容器ID:/kafka/libs \n<span class=\"token comment\"># 重启connect </span>\n<span class=\"token function\">docker</span> restart connect容器ID<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"采用docker-compose安装\"><a href=\"#采用docker-compose安装\" class=\"headerlink\" title=\"采用docker-compose安装\"></a>采用docker-compose安装</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">version: <span class=\"token string\">'3.7'</span>\n\nservices:\n  zookeeper:\n    image: debezium/zookeeper:2.4\n    container_name: zookeeper\n    ports:\n      - <span class=\"token string\">\"2181:2181\"</span>\n      - <span class=\"token string\">\"9011:9011\"</span>\n\n  kafka:\n    image: debezium/kafka:2.4\n    container_name: kafka\n    ports:\n      - <span class=\"token string\">\"9092:9092\"</span>\n    environment:\n      ZOOKEEPER_CONNECT: zookeeper:2181\n\n  connect:\n    image: debezium/connect:2.4\n    container_name: connect\n    ports:\n      - <span class=\"token string\">\"8083:8083\"</span>\n    environment:\n      GROUP_ID: <span class=\"token number\">1</span>\n      CONFIG_STORAGE_TOPIC: my_connect_configs\n      OFFSET_STORAGE_TOPIC: my_connect_offsets\n      STATUS_STORAGE_TOPIC: my_connect_statuses\n      CONNECT_MAX_REQUEST_SIZE: <span class=\"token number\">20000000</span>\n      CONNECT_BUFFER_MEMORY: <span class=\"token number\">800000000</span>\n      CONNECT_FETCH_MAX_BYTES: <span class=\"token number\">20000000</span>\n      CONNECT_MAX_PARTITION_FETCH_BYTES: <span class=\"token number\">20000000</span>\n      OFFSET_FLUSH_INTERVAL_MS: <span class=\"token number\">10000</span>\n      OFFSET_FLUSH_TIMEOUT_MS: <span class=\"token number\">6000000</span>\n      CONNECT_CONNECTIONS_MAX_IDLE_MS: <span class=\"token number\">6000000</span>\n      CONNECT_RECEIVE_BUFFER_BYTES: <span class=\"token number\">500000000</span>\n      CONNECT_PRODUCER_MAX_REQUEST_SIZE: <span class=\"token number\">20000000</span>\n    links:\n      - <span class=\"token string\">\"zookeeper:zookeeper\"</span>\n      - <span class=\"token string\">\"kafka:kafka\"</span>\n    volumes:\n      - ./connect/ojdbc8.jar:/kafka/libs/ojdbc8.jar<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"Oracle连接器配置\"><a href=\"#Oracle连接器配置\" class=\"headerlink\" title=\"Oracle连接器配置\"></a>Oracle连接器配置</h2><blockquote>\n<p>我们这里采用以HTTP形式配置连接器，主要操作的就是对kafka-connect这个中间件操作</p>\n</blockquote>\n<p>首先拿到connect连接器能够使用的暴露出来的ip+端口。公网也好内网也行，内网127.0.0.1为例</p>\n<p>可以使用api工具 如apifox、postman</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"><span class=\"token comment\">#查看所有的connector进程</span>\nGET http://127.0.0.1:8083/connectors\n\n<span class=\"token comment\">#新建connector连接器配置(需要携带配置器json参数)</span>\nPOST http://127.0.0.1:8083/connectors\n\n<span class=\"token comment\">#删除connector连接器,&#123;name&#125;是新建时候name名字</span>\nDELETE http://127.0.0.1:8083/connectors/<span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">#查看connector连接器状态,&#123;name&#125;是新建时候name名字</span>\nGET http://127.0.0.1:8083/connectors/<span class=\"token punctuation\">&#123;</span>name<span class=\"token punctuation\">&#125;</span>/status\n\n<span class=\"token comment\">#目前没有从官网找到更新的接口，目前都是先删除再新增的方式实现修改连接器配置</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h4 id=\"参数说明\"><a href=\"#参数说明\" class=\"headerlink\" title=\"参数说明\"></a>参数说明</h4><blockquote>\n<p>官方文档地址：<a href=\"https://debezium.io/documentation/reference/2.4/connectors/oracle.html\">https://debezium.io/documentation/reference/2.4/connectors/oracle.html</a></p>\n</blockquote>\n<p>结构如下：</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\"><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"debezium-oracle\"</span><span class=\"token punctuation\">,</span>  \n    <span class=\"token property\">\"config\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token property\">\"connector.class\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"io.debezium.connector.oracle.OracleConnector\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"tasks.max\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">,</span>\n         <span class=\"token property\">\"topic.prefix\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"test\"</span><span class=\"token punctuation\">,</span> \n        \t   <span class=\"token property\">\"database.url\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(LOAD_BALANCE=OFF)(FAILOVER=ON)(ADDRESS=(PROTOCOL=TCP)(HOST=&lt;oracle ip 1>)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=&lt;oracle ip 2>)(PORT=1521)))(CONNECT_DATA=SERVICE_NAME=)(SERVER=DEDICATED)))\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"database.user\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"inventory\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"database.password\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"database.dbname\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"xe\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"schema.history.internal.kafka.bootstrap.servers\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"10.168.1.163:9092\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"schema.history.internal.kafka.topic\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"schema-changes.inventory\"</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>列举一些核心比较重要的参数</p>\n<table>\n<thead>\n<tr>\n<th>参数名</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>name属性</td>\n<td>连接器名称，随意但必须唯一</td>\n</tr>\n<tr>\n<td>database.xxx</td>\n<td>数据库连接参数，见名知意，不多解释</td>\n</tr>\n<tr>\n<td>topic.prefix</td>\n<td>kafaka的topic前缀，重要，后续采集的数据推送到kafaka的时候，topic的命名就是**<u>prefix前缀+库名+表名</u>**，非常重要，java程序中监听此topic做后续业务</td>\n</tr>\n<tr>\n<td>table.include.list</td>\n<td>要捕获的变更记录的表，多个逗号分割 格式是<strong>库名.表名</strong></td>\n</tr>\n<tr>\n<td>log.mining.strategy</td>\n<td>redo_log_catalog(默认) 归档日志，<br />redolog写满才会生成归档日志，导致topic接收数据慢（DDL+DML<br />online_catalog 在线日志，即时读取日志（不包含DDL，只包含DML）</td>\n</tr>\n<tr>\n<td>skipped.operations</td>\n<td>默认值：t。不需要监控的操作，可选值：c(insert&#x2F;create）,u（update）,d （delete）,t (truncate）,none。</td>\n</tr>\n<tr>\n<td>snapshot.mode</td>\n<td>认值: initial, 可选值: [initial,initial_onlywhen_needed,never,schema_onlyschema_only_recovery] <br />initial(默认）（初始全量，后续增量）：连接器执行数据库的初始一致性快照，快照完成后，连接器开始为后续数据库更改流式传输事件记录。<br />initia_only（只全量，不增量）：连接器只执行数据库的初始一致性快照，不允许捕获任何后续更改的事件。<br />schema_only（只增量，不全量）：连接器只捕获所有相关表的表结构，不捕获初始数据，但是会同步后续数据库的更改记录。</td>\n</tr>\n<tr>\n<td>decimal.handlling.mode</td>\n<td>默认值: precise，可选值: [precise,double,string]  <br />说明：<br />如果你使用的不是debezium-connector-jdbc插件来接收数据，需将值设为：string，只有这样才能解决number类型被转成base64码的问题。<br />示例 <br />当decimal.handling.mode属性值为precise时：”ZS_ID”:(“scale”:0,”value”:”Aw&#x3D;&#x3D;};<br />当decimal.handling.mode属性值为string时：”ZS_ID”:”3”。</td>\n</tr>\n</tbody></table>","categories":[],"tags":[{"name":"debezium","path":"api/tags/debezium.json"}]}