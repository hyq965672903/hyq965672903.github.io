{"title":"剑指源码-SpringBoot-(一)-序章","slug":"剑指源码-SpringBoot-一-序章","date":"2022-06-07T14:26:00.000Z","updated":"2024-04-22T07:21:14.891Z","comments":true,"path":"api/articles/剑指源码-SpringBoot-一-序章.json","excerpt":"SpringBoot前置，了解EnableMVC实现原理以及作用","covers":null,"content":"<p>SpringBoot前置，了解EnableMVC实现原理以及作用</p>\n<span id=\"more\"></span>\n\n<blockquote>\n<p><strong>@EnableMvc表示由定制类完全替换默认的springMVC配置，一旦开启</strong></p>\n</blockquote>\n<p>自定springmvc的组件的时候会导致默认的组件失效，采用EnableMvc这种方式会将系统默认加载，再将我们自定义的组件加载，这样都会生效</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RUNTIME</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TYPE</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Documented</span>\n<span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DelegatingWebMvcConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">EnableWebMvc</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>EnableWebMvc导入了DelegatingWebMvcConfiguration</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span><span class=\"token punctuation\">(</span>proxyBeanMethods <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DelegatingWebMvcConfiguration</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">WebMvcConfigurationSupport</span> <span class=\"token punctuation\">&#123;</span>\n\n   <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">WebMvcConfigurerComposite</span> configurers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebMvcConfigurerComposite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n   <span class=\"token annotation punctuation\">@Autowired</span><span class=\"token punctuation\">(</span>required <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setConfigurers</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WebMvcConfigurer</span><span class=\"token punctuation\">></span></span> configurers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">CollectionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>configurers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>configurers<span class=\"token punctuation\">.</span><span class=\"token function\">addWebMvcConfigurers</span><span class=\"token punctuation\">(</span>configurers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>DelegatingWebMvcConfiguration会加载所有的WebMvcConfigurer并添加到configurers，以模板方法的模式。父类会加载SpringMVC自己本身有的组件，我们也可以自定义这些组件</p>\n<h2 id=\"SpringBoot导入很多配置类\"><a href=\"#SpringBoot导入很多配置类\" class=\"headerlink\" title=\"SpringBoot导入很多配置类\"></a>SpringBoot导入很多配置类</h2><blockquote>\n<p>@SpringBootApplication是一个复合型注解，包含了@EnableAutoConfiguration注解</p>\n<p>而@EnableAutoConfiguration 又包含如下</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">@AutoConfigurationPackage\n@Import(AutoConfigurationImportSelector.class)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre></div></figure>\n\n<p>@AutoConfigurationPackage又导入了@Import(AutoConfigurationPackages.Registrar.class)</p>\n</blockquote>\n<p>@AutoConfigurationPackage指定了我们以后要扫描哪些包下的所有组件</p>\n<p>@Import(AutoConfigurationImportSelector.class) 导入组件，去类路径下找META-INF&#x2F;spring.factories，这些配置类根据条件以@Bean的形式导入容器</p>\n<h2 id=\"Spring在容器刷新的onRefresh-的时候启动Tomcat\"><a href=\"#Spring在容器刷新的onRefresh-的时候启动Tomcat\" class=\"headerlink\" title=\"Spring在容器刷新的onRefresh()的时候启动Tomcat\"></a>Spring在容器刷新的onRefresh()的时候启动Tomcat</h2><p> <code>ServletWebServerFactoryAutoConfiguration</code></p>\n<p>@Import ServletWebServerFactoryAutoConfiguration.BeanPostProcessorsRegistrar.class</p>\n<p>另外还导入了三种web服务器，Tomcat,Jetty,Undertow。默认是Tomcat</p>\n<p>而在EmbeddedTomcat中又采用TomcatServletWebServerFactory工厂来创建容器</p>\n<p> TomcatServletWebServerFactory中就是传统的以new的形式创建了Tomcat服务器</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">WebServer</span> <span class=\"token function\">getWebServer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletContextInitializer</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> initializers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>disableMBeanRegistry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token class-name\">Registry</span><span class=\"token punctuation\">.</span><span class=\"token function\">disableRegistry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token class-name\">Tomcat</span> tomcat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Tomcat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token class-name\">File</span> baseDir <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>baseDirectory <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>baseDirectory <span class=\"token operator\">:</span> <span class=\"token function\">createTempDir</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tomcat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">setBaseDir</span><span class=\"token punctuation\">(</span>baseDir<span class=\"token punctuation\">.</span><span class=\"token function\">getAbsolutePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">LifecycleListener</span> listener <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serverLifecycleListeners<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">getServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addLifecycleListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token class-name\">Connector</span> connector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Connector</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>protocol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   connector<span class=\"token punctuation\">.</span><span class=\"token function\">setThrowOnFailure</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">getService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addConnector</span><span class=\"token punctuation\">(</span>connector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">customizeConnector</span><span class=\"token punctuation\">(</span>connector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">setConnector</span><span class=\"token punctuation\">(</span>connector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">getHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAutoDeploy</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">configureEngine</span><span class=\"token punctuation\">(</span>tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">getEngine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Connector</span> additionalConnector <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>additionalTomcatConnectors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">getService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addConnector</span><span class=\"token punctuation\">(</span>additionalConnector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token function\">prepareContext</span><span class=\"token punctuation\">(</span>tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">getHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> initializers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">getTomcatWebServer</span><span class=\"token punctuation\">(</span>tomcat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h3 id=\"调用时机\"><a href=\"#调用时机\" class=\"headerlink\" title=\"调用时机\"></a>调用时机</h3><p> ServletWebServerApplicationContext 在容器刷新12大步refresh的时候执行onfresh来启动web容器</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">@Override\nprotected void onRefresh() &#123;\n   super.onRefresh();\n   try &#123;\n      createWebServer();\n   &#125;\n   catch (Throwable ex) &#123;\n      throw new ApplicationContextException(&quot;Unable to start web server&quot;, ex);\n   &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h2 id=\"SpringBoot-启动原理\"><a href=\"#SpringBoot-启动原理\" class=\"headerlink\" title=\"SpringBoot 启动原理\"></a>SpringBoot 启动原理</h2><p> SpringBoot.run</p>\n<figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">ConfigurableApplicationContext</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">long</span> startTime <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">nanoTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token class-name\">DefaultBootstrapContext</span> bootstrapContext <span class=\"token operator\">=</span> <span class=\"token function\">createBootstrapContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token class-name\">ConfigurableApplicationContext</span> context <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">configureHeadlessProperty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token class-name\">SpringApplicationRunListeners</span> listeners <span class=\"token operator\">=</span> <span class=\"token function\">getRunListeners</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   listeners<span class=\"token punctuation\">.</span><span class=\"token function\">starting</span><span class=\"token punctuation\">(</span>bootstrapContext<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mainApplicationClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token class-name\">ApplicationArguments</span> applicationArguments <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultApplicationArguments</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">ConfigurableEnvironment</span> environment <span class=\"token operator\">=</span> <span class=\"token function\">prepareEnvironment</span><span class=\"token punctuation\">(</span>listeners<span class=\"token punctuation\">,</span> bootstrapContext<span class=\"token punctuation\">,</span> applicationArguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">configureIgnoreBeanInfo</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Banner</span> printedBanner <span class=\"token operator\">=</span> <span class=\"token function\">printBanner</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      context <span class=\"token operator\">=</span> <span class=\"token function\">createApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      context<span class=\"token punctuation\">.</span><span class=\"token function\">setApplicationStartup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationStartup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">prepareContext</span><span class=\"token punctuation\">(</span>bootstrapContext<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> environment<span class=\"token punctuation\">,</span> listeners<span class=\"token punctuation\">,</span> applicationArguments<span class=\"token punctuation\">,</span> printedBanner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">refreshContext</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">afterRefresh</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> applicationArguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Duration</span> timeTakenToStartup <span class=\"token operator\">=</span> <span class=\"token class-name\">Duration</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofNanos</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">nanoTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> startTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logStartupInfo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token keyword\">new</span> <span class=\"token class-name\">StartupInfoLogger</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mainApplicationClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">logStarted</span><span class=\"token punctuation\">(</span><span class=\"token function\">getApplicationLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> timeTakenToStartup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      listeners<span class=\"token punctuation\">.</span><span class=\"token function\">started</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> timeTakenToStartup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">callRunners</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> applicationArguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">handleRunFailure</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">,</span> listeners<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalStateException</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token class-name\">Duration</span> timeTakenToReady <span class=\"token operator\">=</span> <span class=\"token class-name\">Duration</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofNanos</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">nanoTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> startTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      listeners<span class=\"token punctuation\">.</span><span class=\"token function\">ready</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> timeTakenToReady<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">handleRunFailure</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalStateException</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">return</span> context<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>1、run 方法内启动 createApplicationContext 会创建一个IOC容器AnnotationConfigServletWebServerApplicationContext</p>\n<p>2、然后执行refreshContext，会执行到Spring刷新12大步，然后再onRefresh时候执行Tomcat的启动</p>\n<p>3、Tomcat启动的时候会加载所有的Servlet</p>\n<p>4、DispatcherServlet回加载九大组件，然后执行整个初始化流程</p>\n","more":"<blockquote>\n<p><strong>@EnableMvc表示由定制类完全替换默认的springMVC配置，一旦开启</strong></p>\n</blockquote>\n<p>自定springmvc的组件的时候会导致默认的组件失效，采用EnableMvc这种方式会将系统默认加载，再将我们自定义的组件加载，这样都会生效</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Retention</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">RetentionPolicy</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RUNTIME</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Target</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ElementType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">TYPE</span><span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Documented</span>\n<span class=\"token annotation punctuation\">@Import</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DelegatingWebMvcConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token annotation punctuation\">@interface</span> <span class=\"token class-name\">EnableWebMvc</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>EnableWebMvc导入了DelegatingWebMvcConfiguration</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Configuration</span><span class=\"token punctuation\">(</span>proxyBeanMethods <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DelegatingWebMvcConfiguration</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">WebMvcConfigurationSupport</span> <span class=\"token punctuation\">&#123;</span>\n\n   <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">WebMvcConfigurerComposite</span> configurers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">WebMvcConfigurerComposite</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\n   <span class=\"token annotation punctuation\">@Autowired</span><span class=\"token punctuation\">(</span>required <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setConfigurers</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">WebMvcConfigurer</span><span class=\"token punctuation\">></span></span> configurers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">CollectionUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">isEmpty</span><span class=\"token punctuation\">(</span>configurers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>configurers<span class=\"token punctuation\">.</span><span class=\"token function\">addWebMvcConfigurers</span><span class=\"token punctuation\">(</span>configurers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>DelegatingWebMvcConfiguration会加载所有的WebMvcConfigurer并添加到configurers，以模板方法的模式。父类会加载SpringMVC自己本身有的组件，我们也可以自定义这些组件</p>\n<h2 id=\"SpringBoot导入很多配置类\"><a href=\"#SpringBoot导入很多配置类\" class=\"headerlink\" title=\"SpringBoot导入很多配置类\"></a>SpringBoot导入很多配置类</h2><blockquote>\n<p>@SpringBootApplication是一个复合型注解，包含了@EnableAutoConfiguration注解</p>\n<p>而@EnableAutoConfiguration 又包含如下</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">@AutoConfigurationPackage\n@Import(AutoConfigurationImportSelector.class)<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>@AutoConfigurationPackage又导入了@Import(AutoConfigurationPackages.Registrar.class)</p>\n</blockquote>\n<p>@AutoConfigurationPackage指定了我们以后要扫描哪些包下的所有组件</p>\n<p>@Import(AutoConfigurationImportSelector.class) 导入组件，去类路径下找META-INF&#x2F;spring.factories，这些配置类根据条件以@Bean的形式导入容器</p>\n<h2 id=\"Spring在容器刷新的onRefresh-的时候启动Tomcat\"><a href=\"#Spring在容器刷新的onRefresh-的时候启动Tomcat\" class=\"headerlink\" title=\"Spring在容器刷新的onRefresh()的时候启动Tomcat\"></a>Spring在容器刷新的onRefresh()的时候启动Tomcat</h2><p> <code>ServletWebServerFactoryAutoConfiguration</code></p>\n<p>@Import ServletWebServerFactoryAutoConfiguration.BeanPostProcessorsRegistrar.class</p>\n<p>另外还导入了三种web服务器，Tomcat,Jetty,Undertow。默认是Tomcat</p>\n<p>而在EmbeddedTomcat中又采用TomcatServletWebServerFactory工厂来创建容器</p>\n<p> TomcatServletWebServerFactory中就是传统的以new的形式创建了Tomcat服务器</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">WebServer</span> <span class=\"token function\">getWebServer</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ServletContextInitializer</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> initializers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>disableMBeanRegistry<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token class-name\">Registry</span><span class=\"token punctuation\">.</span><span class=\"token function\">disableRegistry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token class-name\">Tomcat</span> tomcat <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Tomcat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token class-name\">File</span> baseDir <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>baseDirectory <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>baseDirectory <span class=\"token operator\">:</span> <span class=\"token function\">createTempDir</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tomcat\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">setBaseDir</span><span class=\"token punctuation\">(</span>baseDir<span class=\"token punctuation\">.</span><span class=\"token function\">getAbsolutePath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">LifecycleListener</span> listener <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>serverLifecycleListeners<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">getServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addLifecycleListener</span><span class=\"token punctuation\">(</span>listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token class-name\">Connector</span> connector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Connector</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>protocol<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   connector<span class=\"token punctuation\">.</span><span class=\"token function\">setThrowOnFailure</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">getService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addConnector</span><span class=\"token punctuation\">(</span>connector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">customizeConnector</span><span class=\"token punctuation\">(</span>connector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">setConnector</span><span class=\"token punctuation\">(</span>connector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">getHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">setAutoDeploy</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">configureEngine</span><span class=\"token punctuation\">(</span>tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">getEngine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Connector</span> additionalConnector <span class=\"token operator\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>additionalTomcatConnectors<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">getService</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addConnector</span><span class=\"token punctuation\">(</span>additionalConnector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token function\">prepareContext</span><span class=\"token punctuation\">(</span>tomcat<span class=\"token punctuation\">.</span><span class=\"token function\">getHost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> initializers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">return</span> <span class=\"token function\">getTomcatWebServer</span><span class=\"token punctuation\">(</span>tomcat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"调用时机\"><a href=\"#调用时机\" class=\"headerlink\" title=\"调用时机\"></a>调用时机</h3><p> ServletWebServerApplicationContext 在容器刷新12大步refresh的时候执行onfresh来启动web容器</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">@Override\nprotected void onRefresh() &#123;\n   super.onRefresh();\n   try &#123;\n      createWebServer();\n   &#125;\n   catch (Throwable ex) &#123;\n      throw new ApplicationContextException(&quot;Unable to start web server&quot;, ex);\n   &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"SpringBoot-启动原理\"><a href=\"#SpringBoot-启动原理\" class=\"headerlink\" title=\"SpringBoot 启动原理\"></a>SpringBoot 启动原理</h2><p> SpringBoot.run</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">ConfigurableApplicationContext</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">long</span> startTime <span class=\"token operator\">=</span> <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">nanoTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token class-name\">DefaultBootstrapContext</span> bootstrapContext <span class=\"token operator\">=</span> <span class=\"token function\">createBootstrapContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token class-name\">ConfigurableApplicationContext</span> context <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">configureHeadlessProperty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token class-name\">SpringApplicationRunListeners</span> listeners <span class=\"token operator\">=</span> <span class=\"token function\">getRunListeners</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   listeners<span class=\"token punctuation\">.</span><span class=\"token function\">starting</span><span class=\"token punctuation\">(</span>bootstrapContext<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mainApplicationClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token class-name\">ApplicationArguments</span> applicationArguments <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DefaultApplicationArguments</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">ConfigurableEnvironment</span> environment <span class=\"token operator\">=</span> <span class=\"token function\">prepareEnvironment</span><span class=\"token punctuation\">(</span>listeners<span class=\"token punctuation\">,</span> bootstrapContext<span class=\"token punctuation\">,</span> applicationArguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">configureIgnoreBeanInfo</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Banner</span> printedBanner <span class=\"token operator\">=</span> <span class=\"token function\">printBanner</span><span class=\"token punctuation\">(</span>environment<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      context <span class=\"token operator\">=</span> <span class=\"token function\">createApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      context<span class=\"token punctuation\">.</span><span class=\"token function\">setApplicationStartup</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>applicationStartup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">prepareContext</span><span class=\"token punctuation\">(</span>bootstrapContext<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">,</span> environment<span class=\"token punctuation\">,</span> listeners<span class=\"token punctuation\">,</span> applicationArguments<span class=\"token punctuation\">,</span> printedBanner<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">refreshContext</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">afterRefresh</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> applicationArguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Duration</span> timeTakenToStartup <span class=\"token operator\">=</span> <span class=\"token class-name\">Duration</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofNanos</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">nanoTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> startTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>logStartupInfo<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token keyword\">new</span> <span class=\"token class-name\">StartupInfoLogger</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mainApplicationClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">logStarted</span><span class=\"token punctuation\">(</span><span class=\"token function\">getApplicationLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> timeTakenToStartup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      listeners<span class=\"token punctuation\">.</span><span class=\"token function\">started</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> timeTakenToStartup<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">callRunners</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> applicationArguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">handleRunFailure</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">,</span> listeners<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalStateException</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token class-name\">Duration</span> timeTakenToReady <span class=\"token operator\">=</span> <span class=\"token class-name\">Duration</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofNanos</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">nanoTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> startTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      listeners<span class=\"token punctuation\">.</span><span class=\"token function\">ready</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> timeTakenToReady<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Throwable</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">handleRunFailure</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalStateException</span><span class=\"token punctuation\">(</span>ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">return</span> context<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>1、run 方法内启动 createApplicationContext 会创建一个IOC容器AnnotationConfigServletWebServerApplicationContext</p>\n<p>2、然后执行refreshContext，会执行到Spring刷新12大步，然后再onRefresh时候执行Tomcat的启动</p>\n<p>3、Tomcat启动的时候会加载所有的Servlet</p>\n<p>4、DispatcherServlet回加载九大组件，然后执行整个初始化流程</p>","categories":[{"name":"Java","path":"api/categories/Java.json"},{"name":"SpringBoot源码","path":"api/categories/SpringBoot源码.json"}],"tags":[]}