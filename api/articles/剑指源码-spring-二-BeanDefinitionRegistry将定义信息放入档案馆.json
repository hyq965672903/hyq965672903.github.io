{"title":"剑指源码-spring(二)-BeanDefinitionRegistry将定义信息放入档案馆","slug":"剑指源码-spring-二-BeanDefinitionRegistry将定义信息放入档案馆","date":"2022-04-23T08:32:46.000Z","updated":"2024-04-22T07:21:14.903Z","comments":true,"path":"api/articles/剑指源码-spring-二-BeanDefinitionRegistry将定义信息放入档案馆.json","excerpt":" 概述将文件解析成BeanDefinition信息之前流程，","covers":["http://hyqup-blog-upyun.test.upcdn.net/img/image-20220423214653923.png","http://hyqup-blog-upyun.test.upcdn.net/img/image-20220423214824604.png","http://hyqup-blog-upyun.test.upcdn.net/img/BeanDefinition%E6%B5%81%E7%A8%8B.drawio.png"],"content":"<p> 概述将文件解析成BeanDefinition信息之前流程，</p>\n<span id=\"more\"></span>\n\n<h1 id=\"流程分析\"><a href=\"#流程分析\" class=\"headerlink\" title=\"流程分析\"></a>流程分析</h1><h2 id=\"debug代码流程\"><a href=\"#debug代码流程\" class=\"headerlink\" title=\"debug代码流程\"></a>debug代码流程</h2><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainTest</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token class-name\">ClassPathXmlApplicationContext</span> context <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bean.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Person</span> bean <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bean<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>debug上述代码，断点位置</p>\n<p><img src=\"http://hyqup-blog-upyun.test.upcdn.net/img/image-20220423214653923.png\" alt=\"image-20220423214653923\"></p>\n<p>debug 堆栈分析</p>\n<p><img src=\"http://hyqup-blog-upyun.test.upcdn.net/img/image-20220423214824604.png\" alt=\"image-20220423214824604\"></p>\n<h2 id=\"核心堆栈代码分析\"><a href=\"#核心堆栈代码分析\" class=\"headerlink\" title=\"核心堆栈代码分析\"></a>核心堆栈代码分析</h2><h3 id=\"ClassPathXmlApplicationContext-refresh\"><a href=\"#ClassPathXmlApplicationContext-refresh\" class=\"headerlink\" title=\"ClassPathXmlApplicationContext refresh()\"></a>ClassPathXmlApplicationContext refresh()</h3><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> configLocations<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> refresh<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">ApplicationContext</span> parent<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span> <span class=\"token punctuation\">&#123;</span>\n\n\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setConfigLocations</span><span class=\"token punctuation\">(</span>configLocations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>refresh<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">//刷新容器对象</span>\n\t\t<span class=\"token function\">refresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h3 id=\"AbstractRefreshableApplicationContext-refreshBeanFactory（）\"><a href=\"#AbstractRefreshableApplicationContext-refreshBeanFactory（）\" class=\"headerlink\" title=\"AbstractRefreshableApplicationContext  refreshBeanFactory（）\"></a>AbstractRefreshableApplicationContext  refreshBeanFactory（）</h3><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">refreshBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">hasBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">destroyBeans</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">closeBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 创建档案馆bean工厂，并初始化设置一直自定义属性</span>\n      <span class=\"token class-name\">DefaultListableBeanFactory</span> beanFactory <span class=\"token operator\">=</span> <span class=\"token function\">createBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setSerializationId</span><span class=\"token punctuation\">(</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">customizeBeanFactory</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>beanFactory <span class=\"token operator\">=</span> beanFactory<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApplicationContextException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I/O error parsing bean definition source for \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getDisplayName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h3 id=\"AbstractXmlApplicationContext-loadBeanDefinitions\"><a href=\"#AbstractXmlApplicationContext-loadBeanDefinitions\" class=\"headerlink\" title=\"AbstractXmlApplicationContext   loadBeanDefinitions()\"></a>AbstractXmlApplicationContext   loadBeanDefinitions()</h3><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DefaultListableBeanFactory</span> beanFactory<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">// Create a new XmlBeanDefinitionReader for the given BeanFactory.</span>\n   <span class=\"token comment\">// 准备一个xml内容读取器</span>\n   <span class=\"token class-name\">XmlBeanDefinitionReader</span> beanDefinitionReader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XmlBeanDefinitionReader</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Configure the bean definition reader with this context's</span>\n   <span class=\"token comment\">// resource loading environment.</span>\n   beanDefinitionReader<span class=\"token punctuation\">.</span><span class=\"token function\">setEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">// 组合资源加载器</span>\n   beanDefinitionReader<span class=\"token punctuation\">.</span><span class=\"token function\">setResourceLoader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanDefinitionReader<span class=\"token punctuation\">.</span><span class=\"token function\">setEntityResolver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ResourceEntityResolver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Allow a subclass to provide custom initialization of the reader,</span>\n   <span class=\"token comment\">// then proceed with actually loading the bean definitions.</span>\n   <span class=\"token function\">initBeanDefinitionReader</span><span class=\"token punctuation\">(</span>beanDefinitionReader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span>beanDefinitionReader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>这里组合了一个资源加载器，也就是    <strong>beanDefinitionReader.setResourceLoader(this);</strong> 将自身赋予内容读取器，后续由该内容读取器去读取内容</p>\n<h3 id=\"AbstractXmlApplicationContext-loadBeanDefinitions（）\"><a href=\"#AbstractXmlApplicationContext-loadBeanDefinitions（）\" class=\"headerlink\" title=\"AbstractXmlApplicationContext    loadBeanDefinitions（）\"></a>AbstractXmlApplicationContext    loadBeanDefinitions（）</h3><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">XmlBeanDefinitionReader</span> reader<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token class-name\">Resource</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> configResources <span class=\"token operator\">=</span> <span class=\"token function\">getConfigResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>configResources <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      reader<span class=\"token punctuation\">.</span><span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span>configResources<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token comment\">// 这里数组可以 一次性传入多个配置文件</span>\n   <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> configLocations <span class=\"token operator\">=</span> <span class=\"token function\">getConfigLocations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>configLocations <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 资源读取器 开始读取</span>\n      reader<span class=\"token punctuation\">.</span><span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span>configLocations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h3 id=\"AbstractBeanDefinitionReader-loadBeanDefinitions\"><a href=\"#AbstractBeanDefinitionReader-loadBeanDefinitions\" class=\"headerlink\" title=\"AbstractBeanDefinitionReader  loadBeanDefinitions()\"></a>AbstractBeanDefinitionReader  loadBeanDefinitions()</h3><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> locations<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeanDefinitionStoreException</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">notNull</span><span class=\"token punctuation\">(</span>locations<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Location array must not be null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">//循环加载每一个配置文件的内容</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> location <span class=\"token operator\">:</span> locations<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      count <span class=\"token operator\">+=</span> <span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h3 id=\"XmlBeanDefinitionReader-doLoadBeanDefinitions\"><a href=\"#XmlBeanDefinitionReader-doLoadBeanDefinitions\" class=\"headerlink\" title=\"XmlBeanDefinitionReader doLoadBeanDefinitions\"></a>XmlBeanDefinitionReader doLoadBeanDefinitions</h3><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">int</span> <span class=\"token function\">doLoadBeanDefinitions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InputSource</span> inputSource<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Resource</span> resource<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeanDefinitionStoreException</span> <span class=\"token punctuation\">&#123;</span>\n\n   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token class-name\">Document</span> doc <span class=\"token operator\">=</span> <span class=\"token function\">doLoadDocument</span><span class=\"token punctuation\">(</span>inputSource<span class=\"token punctuation\">,</span> resource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 使用xml 解析工具将xml 变成Document</span>\n      <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token function\">registerBeanDefinitions</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">,</span> resource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isDebugEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Loaded \"</span> <span class=\"token operator\">+</span> count <span class=\"token operator\">+</span> <span class=\"token string\">\" bean definitions from \"</span> <span class=\"token operator\">+</span> resource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>使用dom解析工具将xml 解析成Document,后续BeanDefinitionDocumentReader 会将document解析成bean对象</p>\n<h3 id=\"DefaultBeanDefinitionDocumentReader-processBeanDefinition\"><a href=\"#DefaultBeanDefinitionDocumentReader-processBeanDefinition\" class=\"headerlink\" title=\"DefaultBeanDefinitionDocumentReader  processBeanDefinition\"></a>DefaultBeanDefinitionDocumentReader  processBeanDefinition</h3><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">processBeanDefinition</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span> ele<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BeanDefinitionParserDelegate</span> delegate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token class-name\">BeanDefinitionHolder</span> bdHolder <span class=\"token operator\">=</span> delegate<span class=\"token punctuation\">.</span><span class=\"token function\">parseBeanDefinitionElement</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bdHolder <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 把当前标签解析完了，BeanDefinition  和  beanName 封装在  BeanDefinitionHolder 对象中</span>\n      bdHolder <span class=\"token operator\">=</span> delegate<span class=\"token punctuation\">.</span><span class=\"token function\">decorateBeanDefinitionIfRequired</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">,</span> bdHolder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token comment\">// Register the final decorated instance.</span>\n         <span class=\"token class-name\">BeanDefinitionReaderUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerBeanDefinition</span><span class=\"token punctuation\">(</span>bdHolder<span class=\"token punctuation\">,</span> <span class=\"token function\">getReaderContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegistry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BeanDefinitionStoreException</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token function\">getReaderContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to register bean definition with name '\"</span> <span class=\"token operator\">+</span>\n               bdHolder<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"'\"</span><span class=\"token punctuation\">,</span> ele<span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token comment\">// Send registration event.</span>\n      <span class=\"token function\">getReaderContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fireComponentRegistered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BeanComponentDefinition</span><span class=\"token punctuation\">(</span>bdHolder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<h3 id=\"DefaultListableBeanFactory-registerBeanDefinition\"><a href=\"#DefaultListableBeanFactory-registerBeanDefinition\" class=\"headerlink\" title=\"DefaultListableBeanFactory  registerBeanDefinition\"></a>DefaultListableBeanFactory  registerBeanDefinition</h3><figure><div class=\"code-wrapper\"><pre class=\"line-numbers language-none\"><code class=\"language-none\">@Override\npublic void registerBeanDefinition(String beanName, BeanDefinition beanDefinition)\n      throws BeanDefinitionStoreException &#123;\n\n   Assert.hasText(beanName, &quot;Bean name must not be empty&quot;);\n   Assert.notNull(beanDefinition, &quot;BeanDefinition must not be null&quot;);\n\n   if (beanDefinition instanceof AbstractBeanDefinition) &#123;\n      try &#123;\n         ((AbstractBeanDefinition) beanDefinition).validate();\n      &#125;\n      catch (BeanDefinitionValidationException ex) &#123;\n         throw new BeanDefinitionStoreException(beanDefinition.getResourceDescription(), beanName,\n               &quot;Validation of bean definition failed&quot;, ex);\n      &#125;\n   &#125;\n\n   BeanDefinition existingDefinition &#x3D; this.beanDefinitionMap.get(beanName);\n   &#x2F;&#x2F;如果不为空\n   if (existingDefinition !&#x3D; null) &#123;\n      if (!isAllowBeanDefinitionOverriding()) &#123;\n         throw new BeanDefinitionOverrideException(beanName, beanDefinition, existingDefinition);\n      &#125;\n      else if (existingDefinition.getRole() &lt; beanDefinition.getRole()) &#123;\n         &#x2F;&#x2F; e.g. was ROLE_APPLICATION, now overriding with ROLE_SUPPORT or ROLE_INFRASTRUCTURE\n         if (logger.isInfoEnabled()) &#123;\n            logger.info(&quot;Overriding user-defined bean definition for bean &#39;&quot; + beanName +\n                  &quot;&#39; with a framework-generated bean definition: replacing [&quot; +\n                  existingDefinition + &quot;] with [&quot; + beanDefinition + &quot;]&quot;);\n         &#125;\n      &#125;\n      else if (!beanDefinition.equals(existingDefinition)) &#123;\n         if (logger.isDebugEnabled()) &#123;\n            logger.debug(&quot;Overriding bean definition for bean &#39;&quot; + beanName +\n                  &quot;&#39; with a different definition: replacing [&quot; + existingDefinition +\n                  &quot;] with [&quot; + beanDefinition + &quot;]&quot;);\n         &#125;\n      &#125;\n      else &#123;\n         if (logger.isTraceEnabled()) &#123;\n            logger.trace(&quot;Overriding bean definition for bean &#39;&quot; + beanName +\n                  &quot;&#39; with an equivalent definition: replacing [&quot; + existingDefinition +\n                  &quot;] with [&quot; + beanDefinition + &quot;]&quot;);\n         &#125;\n      &#125;\n      this.beanDefinitionMap.put(beanName, beanDefinition);\n   &#125;\n   else &#123;\n      &#x2F;&#x2F; 没有则注册进去\n      if (hasBeanCreationStarted()) &#123;\n         &#x2F;&#x2F; Cannot modify startup-time collection elements anymore (for stable iteration)\n         synchronized (this.beanDefinitionMap) &#123;\n            &#x2F;&#x2F; 注册到beanDefinitionMap 中去\n            this.beanDefinitionMap.put(beanName, beanDefinition);\n            List&lt;String&gt; updatedDefinitions &#x3D; new ArrayList&lt;&gt;(this.beanDefinitionNames.size() + 1);\n            updatedDefinitions.addAll(this.beanDefinitionNames);\n            updatedDefinitions.add(beanName);\n            this.beanDefinitionNames &#x3D; updatedDefinitions;\n            removeManualSingletonName(beanName);\n         &#125;\n      &#125;\n      else &#123;\n         &#x2F;&#x2F; Still in startup registration phase\n         this.beanDefinitionMap.put(beanName, beanDefinition);\n         this.beanDefinitionNames.add(beanName);\n         removeManualSingletonName(beanName);\n      &#125;\n      this.frozenBeanDefinitionNames &#x3D; null;\n   &#125;\n\n   if (existingDefinition !&#x3D; null || containsSingleton(beanName)) &#123;\n      resetBeanDefinition(beanName);\n   &#125;\n   else if (isConfigurationFrozen()) &#123;\n      clearByTypeCache();\n   &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></figure>\n\n<p>到达这一步，整个基于xml 类型的解析得到beanDefinitionMap 对象就完成了</p>\n<h2 id=\"分析流程图\"><a href=\"#分析流程图\" class=\"headerlink\" title=\"分析流程图\"></a>分析流程图</h2><p><img src=\"http://hyqup-blog-upyun.test.upcdn.net/img/BeanDefinition%E6%B5%81%E7%A8%8B.drawio.png\" alt=\"BeanDefinition流程.drawio\"></p>\n","more":"<h1 id=\"流程分析\"><a href=\"#流程分析\" class=\"headerlink\" title=\"流程分析\"></a>流程分析</h1><h2 id=\"debug代码流程\"><a href=\"#debug代码流程\" class=\"headerlink\" title=\"debug代码流程\"></a>debug代码流程</h2><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MainTest</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token class-name\">ClassPathXmlApplicationContext</span> context <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bean.xml\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">Person</span> bean <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">getBean</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Person</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>bean<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>debug上述代码，断点位置</p>\n<p><img src=\"http://hyqup-blog-upyun.test.upcdn.net/img/image-20220423214653923.png\" alt=\"image-20220423214653923\"></p>\n<p>debug 堆栈分析</p>\n<p><img src=\"http://hyqup-blog-upyun.test.upcdn.net/img/image-20220423214824604.png\" alt=\"image-20220423214824604\"></p>\n<h2 id=\"核心堆栈代码分析\"><a href=\"#核心堆栈代码分析\" class=\"headerlink\" title=\"核心堆栈代码分析\"></a>核心堆栈代码分析</h2><h3 id=\"ClassPathXmlApplicationContext-refresh\"><a href=\"#ClassPathXmlApplicationContext-refresh\" class=\"headerlink\" title=\"ClassPathXmlApplicationContext refresh()\"></a>ClassPathXmlApplicationContext refresh()</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">ClassPathXmlApplicationContext</span><span class=\"token punctuation\">(</span>\n\t\t<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> configLocations<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> refresh<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">ApplicationContext</span> parent<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span> <span class=\"token punctuation\">&#123;</span>\n\n\t<span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>parent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token function\">setConfigLocations</span><span class=\"token punctuation\">(</span>configLocations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>refresh<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t\t<span class=\"token comment\">//刷新容器对象</span>\n\t\t<span class=\"token function\">refresh</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"AbstractRefreshableApplicationContext-refreshBeanFactory（）\"><a href=\"#AbstractRefreshableApplicationContext-refreshBeanFactory（）\" class=\"headerlink\" title=\"AbstractRefreshableApplicationContext  refreshBeanFactory（）\"></a>AbstractRefreshableApplicationContext  refreshBeanFactory（）</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">refreshBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">hasBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">destroyBeans</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">closeBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 创建档案馆bean工厂，并初始化设置一直自定义属性</span>\n      <span class=\"token class-name\">DefaultListableBeanFactory</span> beanFactory <span class=\"token operator\">=</span> <span class=\"token function\">createBeanFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      beanFactory<span class=\"token punctuation\">.</span><span class=\"token function\">setSerializationId</span><span class=\"token punctuation\">(</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">customizeBeanFactory</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>beanFactory <span class=\"token operator\">=</span> beanFactory<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ApplicationContextException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I/O error parsing bean definition source for \"</span> <span class=\"token operator\">+</span> <span class=\"token function\">getDisplayName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"AbstractXmlApplicationContext-loadBeanDefinitions\"><a href=\"#AbstractXmlApplicationContext-loadBeanDefinitions\" class=\"headerlink\" title=\"AbstractXmlApplicationContext   loadBeanDefinitions()\"></a>AbstractXmlApplicationContext   loadBeanDefinitions()</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DefaultListableBeanFactory</span> beanFactory<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">// Create a new XmlBeanDefinitionReader for the given BeanFactory.</span>\n   <span class=\"token comment\">// 准备一个xml内容读取器</span>\n   <span class=\"token class-name\">XmlBeanDefinitionReader</span> beanDefinitionReader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">XmlBeanDefinitionReader</span><span class=\"token punctuation\">(</span>beanFactory<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Configure the bean definition reader with this context's</span>\n   <span class=\"token comment\">// resource loading environment.</span>\n   beanDefinitionReader<span class=\"token punctuation\">.</span><span class=\"token function\">setEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">getEnvironment</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">// 组合资源加载器</span>\n   beanDefinitionReader<span class=\"token punctuation\">.</span><span class=\"token function\">setResourceLoader</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   beanDefinitionReader<span class=\"token punctuation\">.</span><span class=\"token function\">setEntityResolver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ResourceEntityResolver</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n   <span class=\"token comment\">// Allow a subclass to provide custom initialization of the reader,</span>\n   <span class=\"token comment\">// then proceed with actually loading the bean definitions.</span>\n   <span class=\"token function\">initBeanDefinitionReader</span><span class=\"token punctuation\">(</span>beanDefinitionReader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span>beanDefinitionReader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>这里组合了一个资源加载器，也就是    <strong>beanDefinitionReader.setResourceLoader(this);</strong> 将自身赋予内容读取器，后续由该内容读取器去读取内容</p>\n<h3 id=\"AbstractXmlApplicationContext-loadBeanDefinitions（）\"><a href=\"#AbstractXmlApplicationContext-loadBeanDefinitions（）\" class=\"headerlink\" title=\"AbstractXmlApplicationContext    loadBeanDefinitions（）\"></a>AbstractXmlApplicationContext    loadBeanDefinitions（）</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">XmlBeanDefinitionReader</span> reader<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeansException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token class-name\">Resource</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> configResources <span class=\"token operator\">=</span> <span class=\"token function\">getConfigResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>configResources <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      reader<span class=\"token punctuation\">.</span><span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span>configResources<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token comment\">// 这里数组可以 一次性传入多个配置文件</span>\n   <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> configLocations <span class=\"token operator\">=</span> <span class=\"token function\">getConfigLocations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>configLocations <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 资源读取器 开始读取</span>\n      reader<span class=\"token punctuation\">.</span><span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span>configLocations<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"AbstractBeanDefinitionReader-loadBeanDefinitions\"><a href=\"#AbstractBeanDefinitionReader-loadBeanDefinitions\" class=\"headerlink\" title=\"AbstractBeanDefinitionReader  loadBeanDefinitions()\"></a>AbstractBeanDefinitionReader  loadBeanDefinitions()</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> locations<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeanDefinitionStoreException</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token class-name\">Assert</span><span class=\"token punctuation\">.</span><span class=\"token function\">notNull</span><span class=\"token punctuation\">(</span>locations<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Location array must not be null\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n   <span class=\"token comment\">//循环加载每一个配置文件的内容</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> location <span class=\"token operator\">:</span> locations<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      count <span class=\"token operator\">+=</span> <span class=\"token function\">loadBeanDefinitions</span><span class=\"token punctuation\">(</span>location<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"XmlBeanDefinitionReader-doLoadBeanDefinitions\"><a href=\"#XmlBeanDefinitionReader-doLoadBeanDefinitions\" class=\"headerlink\" title=\"XmlBeanDefinitionReader doLoadBeanDefinitions\"></a>XmlBeanDefinitionReader doLoadBeanDefinitions</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">int</span> <span class=\"token function\">doLoadBeanDefinitions</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InputSource</span> inputSource<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Resource</span> resource<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">throws</span> <span class=\"token class-name\">BeanDefinitionStoreException</span> <span class=\"token punctuation\">&#123;</span>\n\n   <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token class-name\">Document</span> doc <span class=\"token operator\">=</span> <span class=\"token function\">doLoadDocument</span><span class=\"token punctuation\">(</span>inputSource<span class=\"token punctuation\">,</span> resource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 使用xml 解析工具将xml 变成Document</span>\n      <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token function\">registerBeanDefinitions</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">,</span> resource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>logger<span class=\"token punctuation\">.</span><span class=\"token function\">isDebugEnabled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         logger<span class=\"token punctuation\">.</span><span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Loaded \"</span> <span class=\"token operator\">+</span> count <span class=\"token operator\">+</span> <span class=\"token string\">\" bean definitions from \"</span> <span class=\"token operator\">+</span> resource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">return</span> count<span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>使用dom解析工具将xml 解析成Document,后续BeanDefinitionDocumentReader 会将document解析成bean对象</p>\n<h3 id=\"DefaultBeanDefinitionDocumentReader-processBeanDefinition\"><a href=\"#DefaultBeanDefinitionDocumentReader-processBeanDefinition\" class=\"headerlink\" title=\"DefaultBeanDefinitionDocumentReader  processBeanDefinition\"></a>DefaultBeanDefinitionDocumentReader  processBeanDefinition</h3><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">processBeanDefinition</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Element</span> ele<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BeanDefinitionParserDelegate</span> delegate<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token class-name\">BeanDefinitionHolder</span> bdHolder <span class=\"token operator\">=</span> delegate<span class=\"token punctuation\">.</span><span class=\"token function\">parseBeanDefinitionElement</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>bdHolder <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 把当前标签解析完了，BeanDefinition  和  beanName 封装在  BeanDefinitionHolder 对象中</span>\n      bdHolder <span class=\"token operator\">=</span> delegate<span class=\"token punctuation\">.</span><span class=\"token function\">decorateBeanDefinitionIfRequired</span><span class=\"token punctuation\">(</span>ele<span class=\"token punctuation\">,</span> bdHolder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token comment\">// Register the final decorated instance.</span>\n         <span class=\"token class-name\">BeanDefinitionReaderUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">registerBeanDefinition</span><span class=\"token punctuation\">(</span>bdHolder<span class=\"token punctuation\">,</span> <span class=\"token function\">getReaderContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRegistry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">BeanDefinitionStoreException</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token function\">getReaderContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Failed to register bean definition with name '\"</span> <span class=\"token operator\">+</span>\n               bdHolder<span class=\"token punctuation\">.</span><span class=\"token function\">getBeanName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"'\"</span><span class=\"token punctuation\">,</span> ele<span class=\"token punctuation\">,</span> ex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token comment\">// Send registration event.</span>\n      <span class=\"token function\">getReaderContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fireComponentRegistered</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BeanComponentDefinition</span><span class=\"token punctuation\">(</span>bdHolder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h3 id=\"DefaultListableBeanFactory-registerBeanDefinition\"><a href=\"#DefaultListableBeanFactory-registerBeanDefinition\" class=\"headerlink\" title=\"DefaultListableBeanFactory  registerBeanDefinition\"></a>DefaultListableBeanFactory  registerBeanDefinition</h3><pre class=\"line-numbers language-none\"><code class=\"language-none\">@Override\npublic void registerBeanDefinition(String beanName, BeanDefinition beanDefinition)\n      throws BeanDefinitionStoreException &#123;\n\n   Assert.hasText(beanName, &quot;Bean name must not be empty&quot;);\n   Assert.notNull(beanDefinition, &quot;BeanDefinition must not be null&quot;);\n\n   if (beanDefinition instanceof AbstractBeanDefinition) &#123;\n      try &#123;\n         ((AbstractBeanDefinition) beanDefinition).validate();\n      &#125;\n      catch (BeanDefinitionValidationException ex) &#123;\n         throw new BeanDefinitionStoreException(beanDefinition.getResourceDescription(), beanName,\n               &quot;Validation of bean definition failed&quot;, ex);\n      &#125;\n   &#125;\n\n   BeanDefinition existingDefinition &#x3D; this.beanDefinitionMap.get(beanName);\n   &#x2F;&#x2F;如果不为空\n   if (existingDefinition !&#x3D; null) &#123;\n      if (!isAllowBeanDefinitionOverriding()) &#123;\n         throw new BeanDefinitionOverrideException(beanName, beanDefinition, existingDefinition);\n      &#125;\n      else if (existingDefinition.getRole() &lt; beanDefinition.getRole()) &#123;\n         &#x2F;&#x2F; e.g. was ROLE_APPLICATION, now overriding with ROLE_SUPPORT or ROLE_INFRASTRUCTURE\n         if (logger.isInfoEnabled()) &#123;\n            logger.info(&quot;Overriding user-defined bean definition for bean &#39;&quot; + beanName +\n                  &quot;&#39; with a framework-generated bean definition: replacing [&quot; +\n                  existingDefinition + &quot;] with [&quot; + beanDefinition + &quot;]&quot;);\n         &#125;\n      &#125;\n      else if (!beanDefinition.equals(existingDefinition)) &#123;\n         if (logger.isDebugEnabled()) &#123;\n            logger.debug(&quot;Overriding bean definition for bean &#39;&quot; + beanName +\n                  &quot;&#39; with a different definition: replacing [&quot; + existingDefinition +\n                  &quot;] with [&quot; + beanDefinition + &quot;]&quot;);\n         &#125;\n      &#125;\n      else &#123;\n         if (logger.isTraceEnabled()) &#123;\n            logger.trace(&quot;Overriding bean definition for bean &#39;&quot; + beanName +\n                  &quot;&#39; with an equivalent definition: replacing [&quot; + existingDefinition +\n                  &quot;] with [&quot; + beanDefinition + &quot;]&quot;);\n         &#125;\n      &#125;\n      this.beanDefinitionMap.put(beanName, beanDefinition);\n   &#125;\n   else &#123;\n      &#x2F;&#x2F; 没有则注册进去\n      if (hasBeanCreationStarted()) &#123;\n         &#x2F;&#x2F; Cannot modify startup-time collection elements anymore (for stable iteration)\n         synchronized (this.beanDefinitionMap) &#123;\n            &#x2F;&#x2F; 注册到beanDefinitionMap 中去\n            this.beanDefinitionMap.put(beanName, beanDefinition);\n            List&lt;String&gt; updatedDefinitions &#x3D; new ArrayList&lt;&gt;(this.beanDefinitionNames.size() + 1);\n            updatedDefinitions.addAll(this.beanDefinitionNames);\n            updatedDefinitions.add(beanName);\n            this.beanDefinitionNames &#x3D; updatedDefinitions;\n            removeManualSingletonName(beanName);\n         &#125;\n      &#125;\n      else &#123;\n         &#x2F;&#x2F; Still in startup registration phase\n         this.beanDefinitionMap.put(beanName, beanDefinition);\n         this.beanDefinitionNames.add(beanName);\n         removeManualSingletonName(beanName);\n      &#125;\n      this.frozenBeanDefinitionNames &#x3D; null;\n   &#125;\n\n   if (existingDefinition !&#x3D; null || containsSingleton(beanName)) &#123;\n      resetBeanDefinition(beanName);\n   &#125;\n   else if (isConfigurationFrozen()) &#123;\n      clearByTypeCache();\n   &#125;\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>到达这一步，整个基于xml 类型的解析得到beanDefinitionMap 对象就完成了</p>\n<h2 id=\"分析流程图\"><a href=\"#分析流程图\" class=\"headerlink\" title=\"分析流程图\"></a>分析流程图</h2><p><img src=\"http://hyqup-blog-upyun.test.upcdn.net/img/BeanDefinition%E6%B5%81%E7%A8%8B.drawio.png\" alt=\"BeanDefinition流程.drawio\"></p>","categories":[{"name":"Java","path":"api/categories/Java.json"},{"name":"Spring源码","path":"api/categories/Spring源码.json"}],"tags":[]}